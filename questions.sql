INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (1, '下列哪个关键字可以使成员变量或方法不被子类继承？', 'static', 'final', 'private', 'protected', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (2, '在Java中，下列哪个选项不是限定符？', 'public', 'private', 'abstract', 'final', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (3, '在Java 8中，下列哪个接口允许使用默认方法实现方法体？', 'Serializable', 'Comparable', 'Runnable', 'Iterable', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (4, '下列哪个选项描述了Java中的“装箱”（boxing）操作？', '将基本数据类型转换为相应的引用对象类型。', '将引用对象类型转换为相应的基本数据类型。', '将一个字符串解析为数字。', '将一个数字格式化为字符串。', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (5, '在Java中，以下哪个方法可以用于将字符串转换为整数？', 'toInt', 'parseInt()', 'convertToInt()', 'valueOf()', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (6, '下列哪个选项描述的不是Java中的流（stream）？', '可以对集合进行并行操作。', '可以从文件、网络等输入源读取数据。', '可以用来过滤、映射、归约等操作。', '可以用来描述对象之间的继承关系。', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (7, 'Java中的“短路”（short-circuit）求值指什么？', '如果第一个操作数为false，则不再对第二个操作数求值。', '如果第一个操作数为true，则不再对第二个操作数求值。', '如果第一个操作数为null，则不再对第二个操作数求值。', '如果第一个操作数为空字符串，则不再对第二个操作数求值。', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (8, '以下哪个类提供了一组用于创建和操作线程的静态方法？', 'Thread', 'Object', 'System', 'Runtime', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (9, '在Java中，以下哪个选项可以用于将数组转换为列表？', 'Arrays.asList()', 'List.toArray()', 'Collection.addAll()', 'Collections.sort()', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (10, '在Java中，以下哪个类用于支持正则表达式的匹配操作？', 'Pattern', 'Scanner', 'Matcher', 'Formatter', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (11, 'Java中的接口可以包含实例变量。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (12, 'Java中的int类型占用4个字节的内存空间。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (13, 'Java中的String类是一个可变的字符串类。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (14, 'Java中的抽象类可以被实例化。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (15, 'Java中的多态性是指同一个程序代码可以在不同的计算机上运行。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (16, 'Java中的for循环和while循环具有完全相同的功能。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (17, 'Java语言本身提供了对多线程编程的支持。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (18, '在Java中，子类不能覆盖父类的private方法。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (19, 'Java中的数组长度可以在运行时改变。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (20, 'Java中的string类型和String类型是同一个数据类型。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (21, '下列哪些选项描述得到Java中的抽象类？', '可以包含抽象方法和非抽象方法。', '不能被实例化', '子类必须实现所有的抽象方法。', '可以实现接口。', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (22, '下列哪些选项是Java中的逻辑运算符？', '&&', '||', '!', '^', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (23, 'Java中的String类和StringBuilder类有何不同？', 'String类是不可变类，而StringBuilder类是可变类。', 'String类可以使用“+”运算符进行字符串连接，而StringBuilder类可以使用append()方法进行字符串连接。', 'String类是线程安全的，而StringBuilder类是非线程安全的。', 'String类具有更好的性能，而StringBuilder类具有更高的可读性。', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (24, '下列哪些选项是Java中的关键字？', 'byte', 'goto', 'package', 'assert', 'ACD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (25, '在Java中，下列哪些选项可以用来创建新线程？', '继承Thread类并重写run()方法。', '实现Runnable接口并实现run()方法。', '使用Executor框架。', '使用Callable和Future接口。', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (26, '下列哪些方法可以用来将字符串转换为大写或小写？', 'toUpperCase()', 'toLowerCase()', 'trim()', 'replace()', 'AB', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (27, '下列哪些选项是Java中的基本数据类型？', 'int', 'float', 'double', 'string', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (28, '在Java中，哪些数据结构可以用来实现先进先出（FIFO）的队列？', 'Stack', 'LinkedList', 'PriorityQueue', 'ArrayDeque', 'BD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (29, '下列哪些选项是Java中的基本数据类型？', 'Integer', 'Boolean', 'String', 'Double', 'BD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (30, '下列哪些选项是Java中的集合框架类？', 'ArrayList', 'Hashtable', 'LinkedList', 'PriorityQueue', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (31, '下列哪个关键字不能被用于修饰构造器？', 'abstract', 'final', 'static', 'synchronized', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (32, '在Java中，以下哪个变量声明是错误的？', 'int i = 10;', 'final int j = 20;', 'transient int k = 30;', 'static final transient int m = 40;', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (33, '下列哪个接口定义了一个单一的抽象方法，因此可以使用Lambda表达式来实现它？', 'Serializable', 'Cloneable', 'Comparable', 'Runnable', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (34, '在Java中，下面哪种类型的异常是编译时异常？', 'RuntimeException', 'IOException', 'NullPointerException', 'ArrayIndexOutOfBoundsException', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (35, 'Java中的“==”和“equals()”运算符有何区别？', '“==”用于比较对象的引用，而“equals()”用于比较对象的内容。', '“==”用于比较对象的内容，而“equals()”用于比较对象的引用。', '“==”和“equals()”都用于比较对象的引用。', '“==”和“equals()”都用于比较对象的内容。', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (36, '下列哪个选项描述的不是Java中的访问修饰符？', 'public', 'private', 'protected', 'friendly', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (37, 'Java中的String类是如何实现不可变性的？', '使用final关键字声明', '使用private访问修饰符', '使用static关键字声明', '使用char[]数组存储字符串内容', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (38, '下列哪个选项描述了Java中的静态变量？', '可以被子类覆盖', '可以被实例方法修改', '随着对象的创建而分配空间', '不依赖于对象而存在', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (39, '下列哪个选项描述了Java中的接口？', '接口可以实例化', '接口可以包含静态方法', '类可以同时实现多个接口', '接口可以包含成员变量', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (40, '下列哪个选项描述了Java中的反射机制？', '可以运行时获取类的信息并操作类对象', '可以动态地加载和卸载类文件', '可以在运行时创建新的类', '可以使Java程序与其他语言的程序交互', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (41, 'Java中的数组长度可以在运行时改变。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (42, 'Java中的接口可以包含实例变量。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (43, '在Java中，Object类是所有其他类的父类。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (44, 'Java中的静态方法不能被覆盖（override）。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (45, 'Java语言本身提供了多线程支持。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (46, 'Java中的HashMap是线程安全的。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (47, 'Java中的抽象类必须包含至少一个抽象方法。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (48, 'Java中的char类型占用两个字节的内存空间。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (49, 'Java中的StringBuffer和StringBuilder类都是可变的字符串类。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (50, 'Java中的try代码块必须配合catch或finally代码块使用。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (51, '下列关于Java中的构造函数的说法哪些是正确的？', '构造函数可以被继承', '构造函数可以重载', '构造函数可以是private访问修饰符', '构造函数可以抛出异常', 'BCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (52, '下列哪些选项是Java中的集合框架接口？', 'List', 'LinkedList', 'Queue', 'Set', 'ACD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (53, '下列哪些选项描述了Java中的线程状态？', 'NEW', 'RUNNING', 'WAITING', 'BLOCKED', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (54, '下列哪些选项是Java中的设计模式？', 'Singleton', 'Observer', 'Facade', 'Adapter', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (55, '下列哪些选项描述了Java中的Lambda表达式？', 'Lambda表达式提供了一种匿名函数的方式', 'Lambda表达式可以被序列化和传递', 'Lambda表达式必须使用return语句返回值', 'Lambda表达式只能用于函数式接口', 'ABD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (56, '下列哪些选项描述了Java中的文件I/O操作？', 'Java 11提供了nio包，提供非阻塞I/O操作', 'InputStream和OutputStream类支持字节流I/O操作', 'Reader和Writer类支持字符流I/O操作', 'Java 8提供了Files工具类，简化文件读写操作', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (57, '下列哪些方法可以用来实现线程同步？', 'synchronized', 'wait()', 'notify()', 'yield()', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (58, '下列哪些选项描述得到一个接口？', '抽象类', '定义新的数据类型', '不包含构造器', '可以继承其他接口', 'BCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (59, '在Java中，下列哪些关键字用于实现继承？', 'extends', 'implements', 'super', 'this', 'AB', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (60, '下列哪些选项是正确的Java注解？', '@Override', '@Deprecated', '@Synchronized', '@NonNull', 'ABD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (61, '下列哪个修饰符不能应用于类？', 'public', 'private', 'protected', 'final', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (62, '在Java中，下列哪种类型的变量不能被赋值为null？', '基本数据类型变量', '引用类型变量', '静态变量', '成员变量', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (63, '下列哪个选项描述了Java中的静态内部类（static inner class）？', '可以访问外部类的非静态成员和静态成员', '只能访问外部类的非静态成员', '只能访问外部类的静态成员', '不能访问外部类的成员', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (64, '下列哪个选项描述了Java中的重载（overload）？', '可以定义多个同名的方法，但是它们的参数列表必须不同', '可以定义多个同名的方法，但是它们的返回类型必须相同', '可以定义多个同名的方法，它们的参数列表和返回类型都可以相同', '只能定义一个方法来处理某个特定的操作', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (65, '	下列代码段输出的结果是什么？
	int x = 10;
	System.out.println("x is " + (x > 10 ? ">" : "<=") + " 10");', 'x is > 10', 'x is < 10', 'x is <= 10', '编译错误', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (66, '下列哪个选项描述了Java中的接口（interface）？', '接口可以包含实例方法和实例变量', '接口可以与其他类继承', '实现接口的类必须实现接口的所有方法', '接口是一种抽象类', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (67, '下列哪个选项描述了Java中的泛型（generic）？', '泛型可以将类型参数化，从而增强代码的可读性和安全性', '. 泛型只能应用于基本数据类型', '泛型只能用于集合类', '泛型无法与反射机制结合使用', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (68, '	下列代码段输出的结果是什么？
	String s1 = "hello";
	String s2 = "hello";
	System.out.println(s1 == s2);', 'TRUE', 'FALSE', '编译错误', '运行时错误', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (69, '下列哪个选项描述了Java中的枚举（enum）？', '枚举可以包含实例方法和实例变量', '枚举可以与其他类继承', '枚举可以作为一种数据类型', '枚举不能包含构造函数', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (70, '下列哪个选项描述了Java中的单例模式（singleton pattern）？', '单例模式是一种设计模式，用于保证一个类只有一个实例，并提供全局访问点', '单例模式是一种Java语言特有的语法结构', '单例模式只能应用于线程安全的情', '单例模式会影响程序的性能', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (71, '在Java中，private修饰的成员变量和方法只能在同一类中直接访问。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (72, '在Java中，==运算符可以用于比较两个对象是否相等。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (73, '在Java中，null表示一个空对象引用。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (74, '在Java中，多态性是指一个对象可以用来代替另一个对象。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (75, '在Java中，抽象方法可以有方法体。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (76, '在Java中，接口中的方法默认是public和abstract的。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (77, '在Java中，break语句只能用于循环语句和switch语句。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (78, '在Java中，finally块中的代码总是会被执行。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (79, '在Java中，静态方法不能被重载。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (80, '在Java中，try-catch语句必须包括finally块。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (81, '下列哪些选项是Java中的集合框架接口？', 'List', 'Set', 'Map', 'Queue', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (82, '下列哪些选项是Java中的异常类？', 'NullPointerException', 'ClassNotFoundException', 'ArithmeticException', 'FileNotFoundException', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (83, '下列哪些选项描述了Java中的同步锁机制？', 'synchronized关键字可以应用于方法和代码块', 'volatile关键字可以保证变量的可见性和有序性', 'Lock接口提供了更灵活、更细粒度的锁机制', 'AtomicInteger类提供了原子操作', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (84, '在Java中，下列哪些选项是数组的特点？', '数组的长度必须在创建时指定。', '数组的元素可以是任何类型。', '数组的索引从0开始。', '数组的大小可以动态改变。', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (85, '在Java中，以下哪些选项可以用于处理异常', 'try-catch', 'throws', 'finally', 'throw', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (86, '在Java中，哪些选项可以用于表示面向对象编程（OOP）的特性？', '继承', '多态性', '封装', '接口', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (87, '下列哪些选项描述了Java中的抽象类？', '不能被实例化。', '可以包含具体方法的实现。', '可以被继承。', '可以实现接口。', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (88, '在Java中，哪些选项可以用于表示文本数据？', 'String', 'StringBuilder', 'StringBuffer', 'Character', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (89, '下列哪些选项是Java中的流（stream）？', 'FileInputStream', 'FileOutputStream', 'ByteArrayInputStream', 'ByteArrayOutputStream', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (90, '下列哪些选项是Java中的排序算法？', '插入排序', '冒泡排序', '快速排序', '选择排序', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (91, '以下哪个选项是非法的 Java 标识符？', '3DPrint', '_myVariable', 'Public', 'while', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (92, '下列哪个方法可以将字符串转换为整数类型？', 'parseInt()', 'toString()', 'toInt()', 'valueOf()', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (93, '下列哪个访问修饰符限制最宽松？', 'public', 'private', 'protected', 'default', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (94, '下列哪个操作符用于将两个整数进行按位与(&)运算？', '&&', '||', '&', '|', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (95, '下列哪个选项描述了Java中的抽象类？', '抽象类不能包含抽象方法', '抽象类可以被实例化', '抽象类必须由子类继承并实现其抽象方法', '抽象类可以直接定义非抽象方法', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (96, '下列哪个选项描述了Java中的静态变量？', '静态变量属于对象，每个对象都有一份副本', '静态变量属于类，所有对象共享同一份副本', '静态变量只能在静态初始化块中进行初始化', '静态变量不能被final修饰', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (97, '下列哪个Java API用于读写文件？', 'java.io.File', 'java.io.RandomAccessFile', 'java.io.Reader', 'java.io.Writer', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (98, '下列哪个选项描述了Java中的多态性？', '子类可以覆盖父类的非私有方法', '父类可以从子类中获取派生信息', '可以使用instanceof关键字判断对象的类型', '可以使用super关键字调用父类的方法', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (99, '下列哪个选项描述Java中的泛型不准确？', '泛型可以应用于类、接口和方法', '泛型可以指定具体的数据类型', '泛型可以提高代码的安全性和可读性', '泛型只能用于基本数据类型', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (100, '在Java中，以下哪个修饰符可以限制方法只能在本类或其子类中调用？', 'public', 'private', 'protected', 'default', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (101, '在Java中，while和do-while循环的区别是，do-while循环至少会执行一次循环体。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (102, '在Java中，final关键字可以用于修饰类、方法、变量等。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (103, '在Java中，try-catch-finally语句块中，finally块总是在catch块之后执行。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (104, '在Java中，如果一个类实现了某个接口，那么它必须实现该接口中声明的所有方法。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (105, '在Java中，抽象类可以被实例化。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (106, '在Java中，Object类是所有类的基类。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (107, '在Java中，==运算符比较的是两个对象的引用地址。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (108, '在Java中，break语句可以用于跳出循环或switch语句。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (109, '在Java中，public访问修饰符表示该成员对所有类可见。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (110, '在Java中，abstract方法必须被子类实现。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (111, '在Java中，下列哪些选项是基本数据类型？', 'byte', 'short', 'int', 'float', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (112, '在Java中，下列哪些选项可以用于实现迭代器（Iterator）？', 'Iterable接口', 'Iterator接口', 'List接口', 'Set接口', 'AB', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (113, '下列哪些选项描述了Java中的多线程同步机制？', 'synchronized关键字', 'wait()方法和notify()方法', 'ReentrantLock类', 'Atomic类', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (114, '在Java中，下列哪些选项可以用于创建新对象？', 'new关键字', 'Class.forName()方法', 'clone()方法', 'newInstance()方法', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (115, '下列哪些选项是Java中的异常类型？', 'RuntimeException', 'IOException', 'NullPointerException', 'ClassNotFoundException', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (116, '在Java中，下列哪些选项可以用于表示面向对象编程（OOP）的原则？', '单一职责原则', '开闭原则', '依赖倒置原则', '里氏替换原则', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (117, '在Java中，下列哪些选项可以用于表示集合框架类？', 'ArrayList', 'HashSet', 'HashMap', 'File', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (118, '在Java中，下列哪些选项可以用于表示面向对象编程（OOP）的特性？', '继承', '多态性', '封装', '接口', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (119, '在Java中，下列哪些选项可以用于表示Lambda表达式？', '->符号', '::符号', '@符号', '$符号', 'AB', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (120, '在Java中，下列哪些选项是Java虚拟机（JVM）的组件？', '类加载器', '垃圾回收器', '编译器', '解释器', 'AB', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (121, '下列哪个关键字用于声明类中的方法或变量可以在子类中被重写？', 'final', 'static', 'abstract', 'extends', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (122, '下列哪个操作符用于将两个整数进行位运算并返回结果？', '&', '|', '^', '>>', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (123, '下列哪个关键字用于定义一个不允许被实例化的类？', 'private', 'static', 'final', 'abstract', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (124, '下列哪个方法可用于将字符串转换为整数？', 'toInt()', 'parseInt()', 'valueOf()', 'convert()', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (125, '下列哪个集合类是线程安全的？', 'ArrayList', 'LinkedList', 'HashMap', 'ConcurrentHashMap', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (126, '下列哪个修饰符可以使得变量、方法、类等只能在同一个包内被访问？', 'protected', 'package-private', 'public', 'private', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (127, '下列哪个异常属于RuntimeException的子类？', 'IOException', 'ClassNotFoundException', 'NullPointerException', 'InterruptedException', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (128, '下列哪个接口表示一组键值对的映射？', 'List', 'Set', 'Map', 'Queue', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (129, '列哪个方法可用于将字符数组转换为字符串？', 'toString()', 'valueOf()', 'concat()', 'join()', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (130, '下列哪个关键字用于表示一个方法不会抛出任何已检查异常？', 'throws', 'try', 'catch', 'throws_not_checked', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (131, '在Java中，static方法可以被重写（override）。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (132, '在Java中，抽象类可以同时实现接口。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (133, '如果一个方法没有明确地声明返回值类型，则默认返回null。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (134, 'clone()方法是Object类的保护方法，子类可以直接调用该方法进行对象拷贝。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (135, '序列化（serialization）是将对象转换为字节流的过程。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (136, 'finally块中的代码一定会被执行，即使在try或catch块中遇到了异常。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (137, 'String类是可变的（mutable）。', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (138, 'Thread.sleep()方法可能抛出InterruptedException异常。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (139, '通过反射可以获取类的私有成员。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (140, 'transient关键字可以用于标记不想被序列化的类成员。', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (141, '在Java中，下列哪些选项是浮点数据类型？', 'float', 'double', 'long', 'short', 'AB', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (142, '下列哪些选项可以用于创建线程？', '继承Thread类', '实现Runnable接口', '使用Executor框架', '使用Fork/Join框架', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (143, '在Java中，下列哪些选项是Java集合框架中的接口？', 'List', 'Set', 'Map', 'Stack', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (144, '在Java中，下列哪些选项可以用于表示类型转换？', '(type)value语法', 'instanceof运算符', 'Casting类', 'Class.forName()方法', 'AB', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (145, '在Java中，下列哪些选项可以用于实现多线程同步？', 'synchronized关键字', 'wait()方法和notify()方法', 'ReentrantLock类', 'Executor框架', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (146, '在Java中，下列哪些选项可以用于表示异常处理（exception handling）？', 'try-catch语句', 'throw语句', 'finally语句块', 'assert语句', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (147, '在Java中，下列哪些选项可以用于表示面向对象编程（OOP）的原则？', '单一职责原则', '开闭原则', '依赖倒置原则', '里氏替换原则', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (148, '在Java中，下列哪些选项可以用于表示Lambda表达式？', '->', '::', '@', '$', 'AB', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (149, '在Java中，下列哪些选项可以用于表示字符串操作？', 'equals()方法', 'compareTo()方法', 'length()方法', 'substring()方法', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (150, '在Java中，下列哪些选项可以用于表示文件I/O操作？', 'File类', 'FileReader类', 'BufferedWriter类', 'InputStream类', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (151, ' 下面哪条语句可以在Java中创建一个新的对象？ ', 'new Object()', 'create Object()', 'Object.newInstance()', 'make Object()', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (152, ' 在Java中，下面哪种循环是“条件控制循环”？ ', 'for循环', 'while循环', 'do-while循环', 'switch-case循环', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (153, ' 在Java中，下面哪个选项可以用于将一个字符串转换为大写字母？ ', 'toLowerCase()', 'toUpperCase()', 'substring()', 'split()', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (154, ' 在Java中，下面哪个关键字用于表示一个方法或类可以被同一包中的其它类访问？ ', 'public', 'private', 'protected', 'static', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (155, ' 在Java中，下面哪个关键字用于指定一个类可以被其他类继承但不能被实例化？ ', 'final', 'abstract', 'extends', 'super', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (156, ' 在Java中，下列哪个关键字可以用于实现继承？ ', 'extends', 'implements', 'abstract', 'final', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (157, ' 在Java中，下列哪个选项可以用于实现字符串拼接（string concatenation）？ ', '+', '-', '*', '/', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (158, ' 在Java中，下列哪个选项可以用于表示类型通配符（type wildcar', '？', '-', '*', '+', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (159, ' 在Java中，下列哪个选项可以用于创建一个匿名内部类？ ', 'new', 'instanceof', 'this', 'super', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (160, ' 在Java中，下面哪个选项可以用于在控制台打印一条消息而不换行？ ', 'System.out.print()', 'System.out.println()', 'System.out.write()', 'System.out.format()', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (161, ' 下列关于Java抽象类的说法中，正确的是： ', '抽象类可以直接实例化。', '抽象类必须包含至少一个抽象方法。', '抽象类不可以包含静态方法。', '抽象类不能继承普通类。', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (162, ' Java中的基本数据类型不包括下列哪种？ ', 'double', 'byte', 'long', 'decimal', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (163, ' 下面哪个选项不是Java中的访问修饰符？ ', 'public', 'private', 'protected', 'static', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (164, ' 下列哪个选项是Java中用于创建线程的类？ ', 'Thread', 'Timer', 'Executor', 'Runnable', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (165, ' Java中的ArrayList和LinkedList都属于什么类型的集合？ ', 'List', 'Set', 'Map', 'Queue', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (166, ' 下列哪个选项可以在Java中创建一个新的对象？ ', 'new Object()', 'Object.new()', 'Object.create()', 'createObject()', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (167, ' 下列哪个选项用于在Java中抛出一个异常？ ', 'throw new Exception()', 'try { } finally { }', 'catch(Exception e)', 'return', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (168, ' 在Java中，下列哪个选项可以用于表示接口（interface）？ ', 'implements', 'extends', 'throws', 'throw', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (169, ' 在Java中，下列哪个选项可以用于表示注解（annotation）？ ', '@Override', '!Override', '#Override', '$Override', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (170, ' 下面哪个方法可以用来读取控制台输入？ ', 'System.in.read()', 'Console.read()', 'Scanner.nextLine()', 'BufferedReader.readLine()', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (171, ' 在Java中，哪个方法可以用于获取字符串的长度？ ', 'toString()', 'length()', 'size()', 'count()', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (172, ' 在Java中，哪个关键字可以用于终止当前循环的执行？ ', 'continue', 'break', 'return', 'exit', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (173, ' 下列哪个选项可以用于创建一个新的线程？ ', 'Thread', 'currentThread()', 'new Runnable()', 'new Thread()', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (174, ' 在Java中，哪个选项可以用于表示空引用？ ', 'null', 'void', 'empty', 'none', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (175, ' 在Java中，下列哪个选项可以用于表示类型转换（type casting）？ ', 'typeof', 'instanceof', 'cast', 'convert', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (176, ' 在Java中，下列哪个选项可以用于表示接口（interface）？ ', 'implements', 'extends', 'throws', 'throw', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (177, ' 在Java中，下列哪个选项可以用于表示对象引用（object reference）？ ', 'int', 'double', 'boolean', 'String', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (178, ' Java中的接口支持如下哪些访问修饰符？ ', 'public', 'private', 'protected', '默认（即没有修饰符）', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (179, ' 下列哪个关键字可以用于终止当前循环并进入下一次循环迭代？ ', 'break', 'continue', 'return', 'exit', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (180, ' 在Java中，下列哪个选项可以用于表示垃圾回收（garbage collection）？ ', 'System.gc()', 'System.exit()', 'System.err()', '[System.in](http://system.in/)()', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (181, '在Java中,要想使一个普通类成为参数化类型,应该使用哪个语法?', 'implements Generics<T>', 'extends Generics<T>', 'class MyClass <T>', 'class MyClass implements Generics<T>', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (182, ' 下列哪个选项可以用于在Java中创建一个新线程？ ', 'Thread', 'start()', 'Runnable.run()', 'Synchronize', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (183, ' 在Java中，以下哪个选项是数据类型而不是引用类型？ ', 'String', 'Integer', 'int', 'Object', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (184, ' 下列哪个选项可以用于将字符串转换为日期时间格式？ ', 'SimpleDateFormat', 'DateTimeFormatter', 'LocalDateTime', 'Date', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (185, ' 在Java中，以下哪个选项表示一段可执行的代码块？ ', 'Class', 'Package', 'Method', 'Interface', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (186, ' 下列哪个选项可以用于在Java中读取二进制文件？ ', 'FileInputStream', 'FileReader', 'Scanner', 'BufferedReader', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (187, ' 在Java中，下列哪个异常类型是编译时异常？ ', 'NullPointerException', 'ArrayIndexOutOfBoundsException', 'FileNotFoundException', 'RuntimeException', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (188, ' 下列哪个选项可以用于在Java中获取当前时间戳（当前时间与1970年1月1日的UTC时间之间的毫秒数。）？ ', 'System.currentTimeMillis()', 'System.nanoTime()', 'Date.getTime()', 'Calendar.getTimeInMillis()', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (189, ' 在Java中，下列哪个关键字可以用于防止方法被子类重写？ ', 'final', 'static', 'abstract', 'synchronized', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (190, ' 下列哪个选项可以用于在Java中将两个字符串合并成一个字符串？ ', 'String.join()', 'String.concat()', 'StringBuilder.append()', 'StringBuffer.insert()', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (191, ' 在Java中，以下哪个选项可以用于创建一个匿名内部类？ ', 'new Object()', 'new Runnable() {...}', 'new String("hello") ; new ArrayList<String>() ;B', 'new ArrayList<String>()', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (192, ' 在Java中，下列哪个关键字可以用于表示“不可变”？ ', 'immutable', 'final', 'static', 'volatile', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (193, ' 在Java中，以下哪种类型的变量不能被修改？ ', 'final', 'static', 'volatile', 'transient', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (194, ' 在Java中，下列哪个选项可以用于读取命令行参数？ ', '[System.in](http://system.in/)', 'System.out', 'System.err', 'args数组', 'D', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (195, ' 在Java中，以下哪个选项不能用于循环控制？ ', 'break', 'continue', 'return', 'goto', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (196, ' 下列哪个选项可以用于在Java中检查对象类型？ ', 'instanceof关键字', 'typeof操作符', 'getClass方法', 'getType方法', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (197, ' 在Java中，下列哪个选项可以用于将字符串转换为整数？ ', 'Integer.parseInt()', 'Double.parseDouble()', 'Boolean.parseBoolean()', 'Character.isDigit()', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (198, ' 在Java中，以下哪个选项用于从集合中删除指定的元素？ ', 'remove(Object obj)', 'add(Object obj)', 'set(int index, Object obj)', 'get(int index)', 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (199, ' 在Java中，以下哪种异常是RuntimeException的子类？ ', 'IOException', 'NullPointerException', 'ClassNotFoundException', 'SQLException', 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (200, ' Java中的下列哪个集合类是有序的？ ', 'HashSet', 'HashMap', 'TreeSet', 'Tree', 'C', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (201, ' Java中的接口可以包含实现代码。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (202, ' 在Java中，数组元素的下标从0开始。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (203, ' 在Java中，System.out.println()方法可以用于在控制台输出文本。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (204, ' 在Java中，静态变量和实例变量的值都存在对象内存空间中。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (205, ' 在Java中，抽象类可以被实例化。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (206, ' 在Java中，枚举类型是一种特殊的类。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (207, ' 在Java中，finalize()方法用于释放对象占用的资源。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (208, ' 在Java中，private成员变量只能在同一个类中访问。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (209, ' 在Java中，Object类是所有类的父类。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (210, ' 在Java中，try-catch语句块可以不包含finally语句块。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (211, ' Java中的接口可以包含实现代码。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (212, ' Java中的final类不能被继承，但是final方法可以被重写。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (213, ' Java中的static关键字可以用于变量、方法和类。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (214, ' Java中的Object类是所有类的父类。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (215, ' Java中的抽象类一定包含抽象方法。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (216, ' Java中的equals()方法用于比较两个对象的内容是否相等。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (217, ' Java中的String是一个基本数据类型。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (218, ' Java中的try-catch语句块必须包含finally语句块。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (219, ' Java中的数组可以存储不同类型的元素。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (220, ' Java中的枚举类型是一种特殊的类。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (221, ' Java中的接口可以包含默认实现。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (222, ' 在Java中，如果两个对象相等，它们的哈希码一定相等。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (223, ' Java语言中类变量和实例变量都可以被子类继承。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (224, ' 在Java中，Array是一个基本数据类型。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (225, ' Java中的异常处理机制可以用来处理程序中的逻辑', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (226, ' 在Java中，所有的异常都必须要立即处理。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (227, ' 在Java中，所有的线程都共享同一片内存区域。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (228, ' Java中的HashMap是线程安全的。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (229, ' Java中的抽象类不能有构造方法。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (230, ' 在Java中，可以使用finalize()方法手动释放对象占用的资源。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (231, ' 在Java中，父类的静态方法可以被子类重写（override）。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (232, ' 在Java中，所有的变量都必须在声明时初始化。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (233, ' 在Java中，接口可以包含默认方法（default method）。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (234, ' 在Java中，单例模式（singleton pattern）可以使用枚举类型实现。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (235, ' 在Java中，`break`语句只能用于循环结构中。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (236, ' 在Java中，`StringBuilder`类是线程安全的。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (237, ' 在Java中，所有异常都必须被捕获或者抛出。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (238, ' 在Java中，`Object`类提供了`clone()`方法，用于创建对象的浅拷贝。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (239, ' 在Java中，`System.gc()`方法可以强制进行垃圾回收。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (240, ' 在Java中，数组和集合都可以使用增强型for循环（enhanced for loop）进行遍历。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (241, ' 在Java中，接口可以包含具体实现的方法。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (242, ' 在Java中，`var`关键字可以用于声明静态变量。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (243, ' 在Java中，`==`运算符可以比较两个对象的内容。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (244, ' 在Java中，抽象类可以直接实例化。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (245, ' 在Java中，`StringBuilder`类是线程安全的。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (246, ' 在Java中，`break`语句只能用于循环结构中。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (247, ' 在Java中，所有异常都必须被捕获或者抛出。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (248, ' 在Java中，`Object`类提供了`clone()`方法，用于创建对象的浅拷贝。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (249, ' 在Java中，`System.gc()`方法可以强制进行垃圾回收。 ', '正确', '错误', null, null, 'B', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (250, ' 在Java中，数组和集合都可以使用增强型for循环（enhanced for loop）进行遍历。 ', '正确', '错误', null, null, 'A', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (251, ' 在Java中，下面哪些关键字用于创建对象？  ', 'new', 'clone', 'create', 'allocate', 'AB', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (252, ' 在Java中，哪些类实现了Serializable接口可以进行序列化？  ', 'java.util.Date', 'java.lang.String', 'java.io.File', 'java.awt.Point', 'ABD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (253, ' 在Java中，下面哪些关键字用于控制访问级别？  ', 'public', 'private', 'protected', 'friendly', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (254, ' 在Java中，下面哪些数据类型是基本数据类型？  ', 'boolean', 'char', 'byte', 'object', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (255, ' 在Java中，下面哪些关键字用于表示一个类或方法可以被继承或重写？  ', 'final', 'abstract', 'extends', 'override', 'BCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (256, ' 在Java中，下面哪些异常是运行时异常？  ', 'NullPointerException', 'ClassCastException', 'ArrayIndexOutOfBoundsException', 'FileNotFoundException', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (257, ' 在Java中，下列哪些选项可以用于表示枚举（enum）类型？ ', '枚举常量', '枚举构造函数', '枚举方法', '枚举泛型类型', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (258, ' 在Java中，下列哪些选项可以用于实现单例模式（singleton pattern）？ ', '私有构造函数', '静态工厂方法', '枚举类型', '双重校验锁（double-checked locking）', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (259, ' 在Java中，下列哪些选项可以用于表示内部类（inner class）？ ', '成员内部类', '局部内部类', '静态内部类', '匿名内部类', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (260, ' 在Java中，下列哪些选项可以用于实现线程安全性？ ', 'synchronized关键字', 'volatile关键字', 'Atomic类', 'Executor框架', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (261, ' 在Java中，下列哪些选项可以用于表示运算符？ ', '算术运算符', '位运算符', '关系运算符', '赋值运算符', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (262, ' 在Java中，下列哪些选项可以用于实现多线程编程？ ', 'Thread类', 'Runnable接口', 'synchronized关键字', 'Lock接口', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (263, ' 在Java中，下列哪些选项可以用于表示异常处理（exception handling）？ ', 'try-catch语句', 'throw语句', 'finally语句块', 'assert语句', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (264, ' 在Java中，下列哪些选项可以用于表示集合框架（collection framework）？ ', 'List接口', 'Set接口', 'Map接口', 'Iterator接口', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (265, ' 在Java中，下列哪些选项可以用于表示流处理（stream processing）？ ', 'map()方法', 'filter()方法', 'reduce()方法', 'join()方法', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (266, ' 在Java中，下列哪些选项可以用于表示反射（reflection）机制？ ', 'Class对象', 'newInstance()方法', 'getDeclaredFields()方法', 'Class.forName()方法', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (267, ' 在Java中，下列哪些选项可以用于实现单例模式（singleton pattern）？ ', '私有构造函数', '静态工厂方法', '枚举类型', '双重校验锁（double-checked locking）', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (268, ' 下列关于Java泛型的说法中，正确的有哪些？  ', 'Java泛型可以应用于类、接口和方法。', 'Java泛型是基于运行时类型擦除实现的。', 'Java泛型可以避免因类型转换错误而导致的运行时异常。', 'Java泛型只能使用一种类型参数。', 'AC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (269, ' 下列关于Java线程同步的说法中，正确的有哪些？  ', 'synchronized关键字可以用于保证代码块的原子性。', 'volatile关键字可以用于保证变量的可见性。', 'Lock接口提供了更灵活的线程同步方式。', 'ReentrantReadWriteLock允许多个线程同时读取共享资源。', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (270, ' 下列关于Java中的文件I/O操作的说法中，正确的有哪些？  ', 'FileInputStream和FileOutputStream是面向字节的输入输出流。', 'BufferedReader比Scanner更快速，但不支持正则表达式。', 'RandomAccessFile可以在文件中随机定位并进行读写操作。', 'FileChannel提供了更高效的文件传输和内存映射IO操作。', 'ACD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (271, ' 下列哪些选项是Java中的集合框架接口？  ', 'List', 'Set', 'Map', 'Queue', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (272, ' 在Java中，以下哪些选项可以用于生成随机数？  ', 'Math.random()', 'Random.nextInt()', 'SecureRandom', 'ThreadLocalRandom', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (273, ' 下列哪些选项是Java中的流操作？  ', 'map', 'reduce', 'filter', 'join', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (274, ' 在Java中，下列哪些选项可以用于创建线程池？  ', 'Executors.newFixedThreadPool()', 'Executors.newSingleThreadExecutor()', 'Executors.newCachedThreadPool()', 'Executors.newScheduledThreadPool()', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (275, ' 下列哪些选项是Java中的锁实现？  ', 'ReentrantLock', 'StampedLock', 'AtomicInteger', 'Semaphore', 'ABD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (276, ' 在Java中，下列哪些选项是可变参数类型？  ', 'int[]', 'String...', 'Object...', 'List', 'BC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (277, ' 在Java中，下列哪些选项可以用于表示字符串操作？ ', 'equals()方法', 'compareTo()方法', 'length()方法', 'substring()方法', 'ACD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (278, ' 下列哪些选项是Java中的日期时间类？  ', 'Date', 'Calendar', 'LocalDateTime', 'Instant', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (279, ' 在Java中，以下哪些选项可以用于创建一个新的线程？  ', 'Thread类的构造函数', 'Runnable接口', 'Callable接口', 'synchronized关键字', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (280, ' 下列哪些选项是Java中的函数式接口？  ', 'Runnable', 'Callable', 'Predicate', 'Consumer', 'ACD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (281, ' 在Java中，以下哪些选项可以用于实现线程同步？  ', 'synchronized关键字', 'Lock接口', 'Semaphore类', 'Thread.sleep()方法', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (282, ' 下列哪些选项是Java中的注解？  ', '@Override', '@Deprecated', '@NotNull', '@Nullable', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (283, ' 在Java中，下列哪些选项可以用于读取文本文件内容？  ', 'BufferedReader', 'FileReader', 'Scanner', 'FileInputStream', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (284, ' Java中的下列哪种类型变量可以被修改？ ', 'final', 'static', 'volatile', 'transient', 'BCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (285, ' 在Java中，以下哪些选项可以用于实现多态性？  ', '继承', '接口', '抽象类', 'final关键字', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (286, ' 下列哪些选项是Java中的IO流类型？  ', '字节流', '字符流', '数据流', '对象流', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (287, ' 在Java中，以下哪些方法可以用于比较两个对象或者引用是否相等？ ', 'equals()', ' ==', 'hashCode()', 'toString()', 'AB', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (288, ' 下列哪些选项是Java中的集合框架实现？  ', 'ArrayList', 'LinkedList', 'Map', 'Set', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (289, ' 在Java中，以下哪些选项是数据类型转换操作？  ', '自动类型转换', '强制类型转换', '解包装（unboxing）', '包装（boxing）', 'ABCD', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (290, ' 下列哪些选项是Java中的排序算法？  ', '冒泡排序', '快速排序', '插入排序', '搜索排序', 'ABC', 'java', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (291, '下列哪种语言不属于编译型语言？', 'C', 'Java', 'Python', 'Go', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (292, '以下哪个不是 C 语言中的数据类型？', 'int', 'double', 'string', 'char', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (293, '对于一个整数变量 x，执行 x >> 1 的效果是什么？', '将 x 的二进制表示向右移动一位，并在左侧填充 0', '将 x的二进制表示向右移动一位，并在左侧填充 1', '将 x 的二进制表示向左移动一位，并在右侧填充 0', '将x的二进制表示向左移动一位，并在右侧填充 1', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (294, '下面哪个选项是正确的结构体声明？', 'struct mystruct { int a, b; }', 'mystruct { int a, b; };', 'struct { int a, b; } mystruct', 'struct mystruct { int a; int b; };', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (295, '使用 const 关键字修饰一个指针变量可以实现什么样的功能？', '使指针变量所指向的值无法被修改', '使指针变量无法指向其他地址', '使指针变量所指向的值和指针变量本身都无法被修改', '使指针变量所指向的值和指针变量本身都无法被访问', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (296, '以下哪个不是 C 语言中的运算符？', '+', '%', '&', '@', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (297, '下列哪种运算符的结合顺序是从右向左？', '++', '&&', '/', '?', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (298, '	下列程序的输出结果是什么？
	#include<stdio.h>
	int main(){ 
	    int a =10, b =20;
	    if(a ==10) {
	        int c = a + b;
	        printf("c = %d\\n", c); 
	    }
	    printf("c = %d\\n", c);
	    return0; 
	}', 'c = 30，c = 0 B. c = 30', 'c = 30，编译出错', '编译出错，c = 0', '编译出错，未定义标识符c', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (299, '下列关于函数声明的说法中，正确的是？', '函数声明必须包括函数体', '函数声明不可以省略参数名', '函数声明必须放在主函数前面', '函数声明只能写在头文件中', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (300, '	下列代码中，输出的结果是什么？
	#include <stdio.h>
	int main() {
	    int arr[] = {1, 2, 3, 4, 5};
	    printf("%d", *(arr+2));
	    return 0;
	}', '1', '2', '3', '4', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (301, 'C 语言中的变量必须先定义才能使用。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (302, '可以使用“==”运算符来比较两个字符串是否相等。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (303, 'switch     语句必须包含 default 分支。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (304, 'sizeof 运算符可以得到一个变量所占用的字节数。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (305, 'continue 语句可以跳过本次循环中余下的语句，直接进行下一次循环。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (306, '变量名的长度没有限制。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (307, 'switch     语句的 case 标签可以是整数或字符类型的常量表达式。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (308, '使用     break 语句可以立即退出当前所在的函数。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (309, '整型变量默认的初始值是0。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (310, 'do-while 循环语句可以保证循环体至少被执行一次。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (311, '下列哪些选项描述了 C 语言中指针的特点？', '指针变量必须初始化才能使用', '指针可以指向任意类型的变量', '指针变量本身占用的内存大小固定', '可以使用指针进行动态内存分配', 'BCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (312, '下列哪些选项描述了结构体的特点？', '可以嵌套定义结构体类型', '可以定义不包含任何成员的结构体类型', '结构体变量可以直接进行赋值操作', '可以使用箭头运算符 -> 访问结构体变量中的成员', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (313, '下面关于指针的描述，哪些是正确的？', '指针是一个变量，存储的是另一个变量的地址', '指针变量必须先初始化才能使用', '指针变量可以被赋值为 NULL', '指针变量可以指向一个函数', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (314, '下面哪些运算符属于关系运算符？', '==', '!=', '&&', '<=', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (315, '下面哪个选项是正确的数组初始化？', 'int arr[3] = {1, 2, 3, 4};', 'char arr[] = “hello”;', 'int arr[] = {1, 2, 3};', 'int arr[3] = {1, 2};', 'BC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (316, '下面哪个选项是正确的字符串拼接函数？', 'strcat()', 'strcpy()', 'stradd()', 'strconcat()', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (317, '下面哪个选项是正确的do-while循环语法？', 'do { printf("Hello"); } while (i < 10);', 'do printf("Hello"); while (i < 10);', 'while (i < 10) { printf("Hello"); } do;', 'do (i < 10) { printf("Hello"); };', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (318, '下面哪个选项是正确的函数声明？', 'int max(int a, int b);', 'void print_hello();', 'double calculate(double x, double y);', 'int add(int a, int b, int c);', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (319, '下面哪个选项是正确的指针运算？', 'int* p = 10;', 'int x = 10; int* p = &x;', 'int* p = &x; int y = *p;', 'int x = 10; int y = &x;', 'BC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (320, '下面哪个语句可以输出字符\'A\'的ASCII码？', 'printf("%c", A);', 'printf("%d", \'A\');', 'printf("%c", 65);', 'printf("%d", A);', 'BC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (321, '下列哪个选项可以声明一个包含10个整数的数组？', 'int array[10];', 'array int[10];', 'int[10] array;', 'array[10] int;', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (322, '下列哪个选项可以计算数组的元素个数？', 'sizeof(array)', 'sizeof(array[])', 'sizeof(array)/sizeof(int)', 'array.length', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (323, '下列哪个关键字用于定义宏？', 'macro', 'define', 'typedef', 'struct', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (324, '下列哪个选项中的宏定义是正确的？', '#define FOO(x, y) x + y', '#define FOO(x, y) { x + y }', '#define FOO(x, y) (x + y)', '#define FOO(x, y) [x + y]', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (325, '下列哪个选项中的宏定义可以用于将宏参数转换为字符串？', '#define STR(x) #x', '#define STR(x) ##x', '#define STR(x) x#', '#define STR(x) x##', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (326, '下列哪个给指针赋空值是正确的？', 'p = 0;', 'p = NULL;', '*p = NULL;', '&p = NULL;', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (327, '下列哪个关键字可以用于定义指向函数的指针？', 'func', 'def', 'typedef', 'ptr', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (328, '下列哪个变量作用域范围最大？', '局部变量', '全局变量', '静态局部变量', '静态全局变量', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (329, '下列哪个变量修饰符表示变量的值只能在声明时初始化，之后不能再被修改？', 'const', 'volatile', 'static', 'register', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (330, '下列哪个变量修饰符可以让变量存储在静态存储区域中，并在程序执行期间一直存在？', 'const', 'volatile', 'static', 'register', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (331, '结构体变量的大小等于其所有成员变量的大小之和。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (332, '变量名可以使用特殊符号。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (333, '在共用体中，修改一个成员的值将影响其他成员的值。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (334, '共用体（union）与结构体（struct）类似，但它们的区别在于共用体中的所有成员都共用同一块内存空间。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (335, '结构体是一种自定义数据类型。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (336, '指针本身占用的内存空间大小和数据类型无关。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (337, '数组名本身就代表了数组的地址，因此数组名不能被赋值或用于地址运算。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (338, '可以使用数组名来获取数组的地址。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (339, 'const关键字和#define宏定义可以互换使用，达到相同的效果。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (340, '指针可以指向一个已经被释放的内存地址。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (341, '下列哪些内容是预处理器可以处理的？', '宏定义', '条件编译', '函数声明', '类型定义', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (342, '下列哪些操作可以修改指针所指向的内存空间？', '解引用操作符 `*`', '自增运算符 `++`', '自减运算符 `--`', '赋值运算符 `=`', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (343, '关于C语言编译器的说法，以下哪些是正确的？', 'C语言编译器是一种将C语言代码转换成机器码的程序', 'C语言编译器可以直接执行C语言代码', 'C语言编译器可以将C语言代码转换成可执行文件', 'C语言编译器只能在Windows操作系统上使用', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (344, '在C语言中，以下哪些语句可以用于申请一个包含10个int类型元素的数组？', 'int arr[10];', 'int arr = (int) malloc(10 * sizeof(int));', 'int arr[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};', 'int arr[9];', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (345, '下面哪些选项是合法的函数声明？', 'int myFunc(int a, int b);', 'myFunc(int a, int b) int;', 'void myFunc(int a, b);', 'float myFunc(int, int);', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (346, '下面哪些选项是合法的标识符？', 'myVar1', '1stVar', 'my_var', 'MYVAR', 'ACD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (347, '在C语言中，以下哪些语句可以用于判断变量x的值是否为偶数？', 'if (x % 2 == 0)', 'if (x & 1 == 0)', 'if (x / 2 * 2 == x)', 'if (x & 0x01 == 0)', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (348, '下列哪些关于C语言函数的说法是正确的？', 'C语言中函数返回值的类型需要在函数定义时就确定，并且只能返回一种类型的值。', '函数可以接受任意类型的参数', '在C语言中，一个函数只能返回一个值。如果需要返回多个值，可以通过指针或结构体等方式实现。', '函数的参数可以有默认值', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (349, '下列哪些关于C语言函数指针的说法是正确的？', '函数指针可以指向任意函数', '函数指针可以作为函数的参数', '函数指针可以作为函数的返回值', '函数指针必须先定义后使用', 'BC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (350, '下列哪些关于C语言结构体的说法是正确的？', '结构体可以包含不同类型的成员变量', '结构体的成员变量可以是指针类型', '结构体的成员变量可以是函数指针类型', '结构体的大小和成员变量的大小之和相等', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (351, 'typedef 可以用来定义哪种类型的别名？', '变量类型', '函数类型', '结构体类型', '所有类型', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (352, 'typedef 定义别名的语法格式是什么？', 'typedef 新类型名 原类型名', 'typedef 原类型名 新类型名', 'typedef 新类型名 = 原类型名', 'typedef 原类型名 = 新类型名', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (353, '下面哪个描述最符合 static 关键字的作用？', '限制变量的作用域', '限制变量的类型', '限制变量的内存分配', '限制变量的可见性', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (354, '下面哪个选项不是 C 语言的关键字？', 'switch', 'volatile', 'constant', 'register', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (355, '下列哪种运算符不能用于 float 类型的变量', '+', '-', '*', '%', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (356, '在使用 printf 函数打印 double 类型变量时，下列哪个格式控制符可以用来控制小数点后的位数？', '%d', '%f', '%e', '%g', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (357, 'sizeof 运算符的值在编译时还是运行时确定？', '编译时', '运行时', '取决于具体情况', '以上都不对', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (358, 'sizeof 运算符返回的是什么类型的值？', 'int', 'double', 'size_t', 'void', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (359, '下列哪个选项声明的函数是一个常量函数？', 'void foo(int x, const char *str)', 'void bar(const int *arr, int n', 'int baz(int x) const', 'int qux(const int x)', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (360, '下列哪个选项可以用来声明一个函数？', 'void foo() {}', 'void foo();', 'int x = foo();', '#define foo bar', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (361, '下列哪些操作会使 double 类型的变量的值产生溢出？', '将一个过大的数赋值给变量', '对变量进行运算操作并使其值超过了 double 类型的表示范围', '对变量进行舍入操作并使其值超过了 double 类型的表示范围', '将一个字符串赋值给变量', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (362, '下列哪些函数可以用来对 double 类型的变量进行舍入操作？', 'ceil()', 'floor()', 'round()', 'fabs()', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (363, '下列哪些情况下可以使用宏定义？', '替代常量，如 #define PI 3.14159', '替代函数调用，如 #define MAX(x, y) ((x) > (y) ? (x) : (y)', '替代变量声明，如 #define int i;', '替代复杂的语句块，如 #define while(x) { printf("%d", x); }', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (364, '下列哪些头文件可以用来实现文件操作？', 'stdio.h', 'fcntl.h', 'sys/stat.h', 'dirent.h', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (365, '下列哪些变量命名是合法的？', 'count', '. _tota', '123total', 'Total', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (366, '下列哪些命名约定是不建议使用的？', '使用大写字母来表示变量名', '使用数字开头的变量名', '使用单个字母来表示变量名', '使用系统保留字作为变量名', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (367, '下列哪些描述是结构体的正确定义方式？', '可以使用 typedef 关键字来定义结构体类型', '在定义结构体类型时，必须指定结构体的成员', '结构体的成员可以是基本数据类型或其他结构体类型', '结构体的成员可以是函数指针类型', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (368, '下列哪些操作可以对结构体进行初始化？', '使用成员运算符 . 来给结构体的成员赋值', '使用 memset 函数来将结构体的所有成员设置为默认值', '使用初始化列表来给结构体的成员赋值', '在定义结构体类型时，指定默认值', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (369, '在 C 语言中，下列哪些描述是共用体的正确定义方式？', '使用 typedef 关键字来定义共用体类型', '在定义共用体类型时，必须指定共用体的成员', '共用体的成员可以是基本数据类型或其他结构体类型', '共用体的成员必须具有相同的起始地址', 'BC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (370, '在 C 语言中，下列哪些描述是共用体的特点？', '共用体的所有成员共用同一块内存', '共用体的所有成员具有相同的起始地址', '共用体的大小等于其最大成员的大小', '用体的成员必须都是相同的数据类型', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (371, '下列哪个关键字可以用来定义一个常量？', 'static', 'volatile', 'const', 'extern', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (372, '下列哪种关系运算符的优先级最高？', '<=', '&&', '==', '||', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (373, '下列哪种操作符可以改变变量的值？', '==', '&', '++', '*', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (374, '下列哪种语句可以将一个字符转换为整数？', 'toint', 'char', '(int)', 'atoi', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (375, '哪种函数可以在一个字符串中查找指定的子字符串？', 'strstr', 'strfind', 'findstr', 'searchstr', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (376, '下列哪种函数可以将一个字符串转换为小写形式？', 'strlower', 'tolower', 'lowerstr', 'lowercase', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (377, '静态变量的作用域是什么？', '文件作用域', '函数作用域', '块作用域', '全局作用域', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (378, '静态函数的作用是什么？', '限制函数的作用域,防止与其他文件中的同名函数冲突', '声明函数的返回值类型', '声明函数的参数类型', '定义函数的入口点', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (379, '结构体的大小取决于哪些因素？', '结构体内成员的数据类型和对齐方式', '结构体的名称和成员数量', '结构体内成员的默认值', '结构体内成员的顺序', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (380, '如果一个结构体中有一个成员是指针类型，那么在使用该结构体变量时，需要注意什么？', '指针所指向的内存是否已经分配', '结构体中指针成员的名称是否正确', '指针所指向的数据类型是否与结构体定义相符', '结构体中指针成员的默认值是否为空指针', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (381, '变量名区分大小写，例如变量 x 和变量 X 是不同的变量名。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (382, '语言中的变量名可以包含空格或其他特殊字符。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (383, 'C语言中的函数必须要有返回值。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (384, 'C语言中的函数不可以在其他函数中嵌套定义。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (385, 'const 关键字可以用来修饰函数返回值类型。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (386, 'const 关键字只能用来修饰基本数据类型，不能用来修饰结构体、数组等复合数据类型。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (387, 'C语言中的字符串是一个字符数组。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (388, 'C语言中的字符串可以通过 sizeof() 函数获取其长度。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (389, '结构体中的成员可以是另一个结构体类型。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (390, '结构体变量的大小等于其所有成员大小之和。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (391, '在C语言中，以下哪些情况会导致结构体成员之间的字节对齐方式发生改变？', '结构体中新增一个成员', '结构体中某个成员的数据类型发生变化', '编译器版本的更换', '编译器的编译选项的更改', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (392, '在C语言中，如何从字符串中删除指定的字符？', '使用 memmove() 函数', '使用 strspn() 函数。', '使用 strtok() 函数。', '使用 strstr() 函数。', 'ACD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (393, '以下哪些声明是正确的指针声明？', 'int *p;', 'char name[10];', 'double (*arr)[5];', 'struct node *list;', 'ACD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (394, '在C语言中，哪些类型的变量存储在堆栈（stack）中？', '局部变量', '全局变量', '静态变量', '动态分配的内存', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (395, '哪些函数可以用于将一个字符串拼接到另一个字符串的末尾？', 'strcat()', 'strncat()', 'sprintf()', 'snprintf()', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (396, '如何将字符串转换为浮点数？', '使用 atof() 函数', '使用 sprintf() 函数。', '使用 strtod() 函数。', '使用 scanf() 函数。', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (397, '在C语言中，下列哪些函数是安全函数？', 'strcpy()', 'strncpy()', 'strcat()', 'strncat()', 'BD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (398, '下列哪些函数可以在缓冲区溢出时终止程序？', 'memcpy()', 'strcpy()', 'strncpy()', 'memset()', 'BC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (399, '在C语言中，线程间通信可以使用哪些机制？', '信号量', '互斥锁', '条件变量', '套接字', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (400, '在C语言中，头文件可以包含哪些内容？', '函数原型和变量声明', '结构体和枚举类型定义', '宏定义和类型别名', '函数实现和全局变量定义', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (401, '下列哪个选项可以用于在 C 语言中读取一行完整字符串?', 'scanf("%s", string);', 'printf("%s", string);', 'gets(string);', 'puts(string);', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (402, '在 C 语言中，下面哪种循环语句至少会执行一次？', 'while', 'for', 'do-while', 'switch', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (403, '在 C 语言中，以下哪个库函数用于将一个字符串转换为一个整数？', 'atoi()', 'itoa()', 'atof()', 'sprintf()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (404, '以下哪个关键字用于动态分配内存？', 'new', 'free', 'malloc', 'delete', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (405, '下列哪个运算符具有最高优先级？', '+', '%', '==\'', '&&', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (406, '下列哪种循环语句可以在循环开始时判断循环条件是否成立？', 'while', 'do-while 循环', 'for 循环', 'switch-case 循环', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (407, '下列关于指针的说法，正确的是：', '指针本身存储的是指向变量的值', '指针可以用来表示字符串', '指向常量的指针不能被赋值为指向非常量的指针', '指针只能指向同类型的数据', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (408, '	下列程序的输出结果是什么？
	#include <stdio.h>
	void main() {
	    int x = 0, y = 1;
	    if (++x == 0 && y++)
	        printf("%d", y);
	    else
	        printf("%d%d",x, y++);
	    printf("%d", y);
	}', '112', '122', '211', '221', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (409, '下列关于结构体的说法，错误的是', '结构体不可以包含不同类型的变量', '可以使用 . 运算符访问结构体中的成员变量', '通过指针也可以访问结构体中的成员变量', '结构体中的成员变量可以互相嵌套', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (410, '	下列程序的输出结果是什么？
	#include <stdio.h>
	void main() {
	    int x = 0, y = 1;
	    if (x == 0 && y++)
	        printf("%d", y);
	    else
	        printf("%d", y++);
	    printf("%d", y);
	}', '1,1', '2,2', '3,3', '4,4', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (411, 'continue 语句可以跳出所有循环。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (412, '声明一个指针变量时必须要指定其初始值。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (413, '数组名是一个常量指针', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (414, '如果两个变量指向同一个内存地址，则它们赋值后的结果是相等的。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (415, '变量的作用域指定了变量在程序中的可访问性和生命周期。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (416, '结构体可以包含另一个结构体作为成员变量。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (417, '位运算符优先级高于比较运算符。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (418, '函数可以返回多个值。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (419, '变量名和函数名都遵循相同的命名规则。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (420, '指针变量存储的是地址而不是实际的数值。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (421, '下列哪些函数是标准 I/O 库函数？', 'printf', 'scanf', 'getchar', 'open', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (422, '下列哪些关于指针的描述是正确的？', '指针存储地址', '指针可以指向任何类型的数据', '指针的大小与所指向的数据类型有关', '指针必须始终被显式初始化', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (423, '下列哪些声明是合法的？', 'int* p;', 'int p;', 'int (p)[10];', 'int* a[];', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (424, '下列哪些操作符具有右结合性？', '=', '++', '->', '-', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (425, '下列哪些类型修饰符可以用于函数参数？', 'const', 'volatile', 'static', 'extern', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (426, '下列哪些关于数组的描述是正确的？', '数组名是一个指向数组首元素的常量指针', '数组元素的下标从0开始', '数组大小必须在编译时指定，不能动态分配', '可以使用数组名作为一个变量名', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (427, '下列哪些语句会导致 C 语言程序崩溃？', '除以 0', '访问数组越界', '使用未初始化的指针', '调用不存在的函数', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (428, '下列哪些关于宏定义的说法是正确的？', '宏定义可以用 #define 关键字进行定义', '宏定义可以包含参数', '宏定义生成的代码不需要编译，直接执行', '宏定义不能替换掉代码中的字符串常量', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (429, '下列哪些关于函数指针的说法是正确的？', '函数指针存储的是函数的入口地址', '函数指针可以作为函数的参数', '函数指针可以作为函数的返回值', '函数指针只能指向同一类型的函数', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (430, '下列哪些关于静态变量的说法是正确的？', '静态变量的生命周期与程序运行时间相同', '静态变量默认初始化为 0', '静态变量只能在局部作用域中定义', '静态变量的作用域只在声明它的文件中可见，不会被其他文件看到。', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (431, '下列哪个选项可以用于在 C 语言中读取一个字符？ ', 'scanf("%c", &ch);', 'printf("%c", ch);', 'gets(ch);', 'putchar(ch);', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (432, '下列哪个条件语句在判断时会将非零值视为真？', 'if (x = 0)', 'if (x == 0)', 'if (!x)', 'if (x)', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (433, '在 C 语言中，以下哪个关键字用于定义常量？', 'const', 'static', 'extern', 'volatile', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (434, '	下列程序的输出结果是什么？
	#include <stdio.h>
	void main() {
	    int a = 10, b = 20, c = 30;
	    int *p1 = &a, *p2 = &b, *p3 = &c;
	    *p1 += 5;
	    (*p2)++;
	    (*p3)--;
	    printf("%d %d %d", a, b, c);
	}', '15 21 29', '10 20 30', '15 20 29', '10 21 29', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (435, '下列哪个语句可以打印出字符型变量 ch 的 ASCII 码值？', 'printf("%d", ch);', 'printf("%c", ch);', 'printf("%s", ch);', 'printf("%f", ch);', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (436, '下列哪条语句可以将整型变量 a 和 b 的值交换？', 'temp = a; a = b; b = temp;', 'a ^= b ^= a ^= b;', 'a += b; b = a - b; a -= b;', 'b *= a; a = b / a; b /= a;', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (437, '	下列程序的输出结果是什么？
	#include <stdio.h>
	#define SQUARE(x) x * x
	int main() {
	    int a = 5, b = 3, c;
	    c = SQUARE(a + b);
	    printf("%d\\n", c);
	    return 0;
	}', '64', '34', '36', '23', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (438, '	下列代码片段的输出结果是什么？
	char str[] = "hello";
	printf("%d %d\\n", sizeof(str), strlen(str));', '6 5', '5 5', '6 6', '5 6', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (439, '	下列程序的输出结果是什么？
	#include <stdio.h>
	int main() {
	    int i = 0;
	    for (; i++ < 10;) {
	        if (i % 3 == 0) continue;
	        printf("%d ", i);
	    }
	    return 0;
	}', '1 2 4 5 7 8 10', '1 2 3 4 5 6 7 8 9 10', '1 2 4 5 7 8 10 11', '1 2 4 5 7 8 10 11 12', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (440, '在 C 语言中，以下哪个库函数可以用于清空输入缓冲区？', 'fflush()', 'rewind()', 'clearerr()', 'setbuf()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (441, '在 C 语言中，任何非零值都被视为 true。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (442, 'C 语言中，可变参数函数必须至少有一个固定参数。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (443, '在 C 语言中，字符串常量在内存中以字符数组的形式存在。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (444, '在 C 语言中，变量名的第一个字符必须是字母或下划线。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (445, '在 C 语言中，结构体可以包含另一个结构体作为其成员变量。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (446, '在 C 语言中，goto 语句可以用于从一个代码块跳转到另一个文件的代码块。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (447, '在 C 语言中，枚举类型的成员值默认从 1 开始自动编号。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (448, '在 C 语言中，数组名和指向数组第一个元素的指针在大多数情况下可以互换使用。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (449, '在 C 语言中，switch 语句的 case 标签必须是整型常量表达式或字符常量表达式。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (450, '在 C 语言中，指向函数的指针可以用于调用函数。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (451, '	下列代码段中有哪些错误？
	char *str1, *str2;
	str1 = "Hello";
	str2 = malloc(strlen(str1) + 1);
	strcpy(str2, str1);', '没有包含头文件', '没有检查 malloc 是否分配成功', '没有释放动态分配的内存', 'str1 指针未初始化', 'BC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (452, '下列哪些语句可以创建一个名为 student 的结构体类型？', 'struct student { char name[20]; int age; };', 'typedef struct { char name[20]; int age; } student;', 'define struct { char name[20]; int age; } student;', 'struct { char name[20]; int age; } student;', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (453, '下列哪个函数可以将字符串 s 中所有字符都转换成大写字母？', 'strupr(s)', 'strlwr(s)', 'toupper(s)', 'tolower(s)', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (454, '	下列代码中哪些部分会导致编译错误？
	#include <stdio.h>
	int main() {
	    int a = 10;
	    const int b = 20;
	    int *p1 = &a;
	    const int *p2 = &b;
	    *p1 = 15;
	    p1 = p2;
	    *p1 = 25;
	    printf("%d %d", a, b);
	    return 0;
	}', 'const int b = 20;', 'const int *p2 = &b;', '*p1 = 25;', 'p1 = p2;', 'BCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (455, '下列哪些语句可以打印出字符串中的第二个字符？', 'printf("%s", str[1]);', 'printf("%s", str + 1);', 'printf("%c", *(str + 1));', 'printf("%c", str[1]);', 'CD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (456, '下列哪些关键字用于限制变量的作用域？', 'const', 'static', 'extern', 'register', 'BD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (457, '在 C 语言中，以下哪些库函数用于将一个字符转换为大写或小写字母？', 'toupper()', 'tolower()', 'isupper()', 'islower()', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (458, '在 C 语言中，以下哪些操作符用于指针运算？', '+', '-', '*', '/', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (459, '下列哪些语句可以打印出字符变量 ch 的 ASCII 码值？', 'printf("%d", ch);', 'printf("%c", ch);', 'printf("%x", ch);', 'printf("%f", ch);', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (460, '在 C 语言中，以下哪些库函数可以用于字符串拼接？', 'strcat()', 'sprintf()', 'strstr()', 'vsnprintf()', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (461, '下列哪个条件语句在判断时会将非零值视为真？', 'if (x = 0)', 'if (x == 0)', 'if (!x)', 'if (x)', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (462, '在 C 语言中，以下哪个符号表示“按位异或”运算？', '^', '&', '|', '~', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (463, '在 C 语言中，以下哪种数据结构可以用于实现栈和队列？', '数组', '链表', '树', '图', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (464, '	下列代码的输出结果是什么?
	#include <stdio.h>
	#define swap(x, y) { x = x ^ y; y = x ^ y; x = x ^ y; }
	int main() {
	    int a = 3, b = 5;
	    swap(a, b);
	    printf("a=%d, b=%d", a, b);
	    return 0;
	}', 'a=5, b=3', 'a=3, b=5', 'a=0, b=0', '编译错误', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (465, '	下列代码的输出结果是什么？
	#include <stdio.h>
	int main() {
	    int i = 3, j = 4, k = 5;
	    printf("%d %d %d", ++i * j-- + k++, i++ && j++ || k++, --i > j ? --k : ++j);
	    return 0;
	}', '19 0 -1', '20 1 4', '21 1 4', '20 0 -1', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (466, '	下列代码段中，哪一行代码会导致编译错误？
	int *p1;
	const int *p2;
	*p1 = 10;
	p2 = p1;
	*p2 = 20;', '第 1 行', '第 2 行', '第 3 行', '第 5 行', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (467, '在 C 语言中，以下哪个运算符可以用于在位级别上左移一个数值？', '<<', '>>', '&', '|', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (468, '下列哪个关键字可以用于指定函数的参数数量和类型？', 'inline', 'register', 'volatile', 'void', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (469, '下列哪个语句声明了一个指向函数的指针？', '`int *p;`', '`float f();`', '`void (*fptr)(int);`', '`char str[] = "Hello World";`', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (470, ' 下面的表达式的值是多少？ 4 | 3 & 2', '0', '1', '2', '7', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (471, '	下列代码的输出结果是什么？
	#include <stdio.h>
	int main()
	{
	    char a[100];
	    int i = 0;
	    while ((a[i++] = getchar()) != \'\\n\');
	    printf("%s", a);
	    return 0;
	}', '输出空字符串。', '输出输入的所有字符。', '输入超过 99 个字符时程序崩溃。', '只能读入英文字符。', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (472, '在 C 语言中,下列哪个类型的变量默认为全局变量？', 'static 变量', 'extern 变量', 'auto 变量', 'register 变量', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (473, '下列哪个库函数可以用于在内存中搜索指定的值？', 'memcmp()', 'memchr()', 'memset()', 'memcpy()', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (474, '	下列代码的输出结果是什么？
	#include <stdio.h>
	int main()
	{
	    unsigned int a = 0xffffffff;
	    printf("%d\\n", a);
	    return 0;
	}', '-1', '4294967295', '编译错误', '运行时错误', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (475, '下列哪个选项描述的是二进制运算符“<<”和“>>”的作用？', '“<<”表示左移操作，“>>”表示右移操作。', '“<<”和“>>”都可以用来进行位逻辑运算。', '“<<”和“>>”都可以用来进行位运算。', '“<<”表示加法，“>>”表示减法。', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (476, '下面哪个选项描述的是数组名的特性？', '数组名是一个常量指针。', '数组名是一个指向第一个元素的指针。', '数组名可以被赋值给另一个数组。', '数组名可以被用作函数参数。', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (477, '下列哪个选项是错误的？', '结构体可以包含其他结构体类型的成员。', '结构体的大小等于所有成员的大小之和。', '结构体的成员可以是函数指针。', '结构体可以包含自身类型的指针成员。', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (478, '下列哪个选项描述了对指针的解除引用操作（*）的正确用法?', '可以对任意类型的指针执行解除引用操作。', '如果指针所指向的对象不是基本类型，则需要使用圆括号将其括起来。', '解除引用操作可以用来获取指针所指向的对象的地址。', '如果指针为空指针，则解除引用操作会导致程序崩溃。', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (479, '下列哪个变量声明是不合法的？', ' int 123variable = 10;', ' float $amount = 1000.50;', ' char *name = "Tom";', ' double percentage = 75.5;', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (480, '	下面的代码片段有什么问题？如果有，它会导致什么后果？
	char *str = "hello";
	str[2] = \'L\';', '没有问题', '编译时会出错', '运行时会出错', '输出结果为"heLlo"', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (481, '	在C语言中，以下程序的输出结果是什么？
	#include <stdio.h>
	int main() {
	    int arr[] = {1, 2, 3, 4, 5};
	    printf("%d", *(arr+2));
	    return 0;
	}', '1', '2', '3', '4', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (482, '下列哪个选项可以正确地声明一个指向函数的指针，该函数接受一个整型参数并返回一个指向整型的指针？', 'int *func_ptr(int);', 'int (*func_ptr)(int);', 'int *(*func_ptr)(int);', 'int *(func_ptr(int));', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (483, '在C语言中，下面哪个选项可以正确地定义一个包含10个元素的字符串数组，并将其所有元素初始化为全0？', 'char array[10] = { \'0\' };', 'char array[] = "0000000000";', 'char array[10] = "0000000000";', 'char array[10] = { 0 };', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (484, '在C语言中，以下哪个运算符具有最高优先级？', 'sizeof', '!', '++', '*', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (485, '	下面代码的输出结果是什么？
	#include <stdio.h>
	void foo(int n) {
	    if (n <= 0) {
	        return;
	    }
	    printf("%d ", n);
	    foo(n-2);
	}
	int main() {
	    foo(10);
	    return 0;
	}', '输出 10 8 6 4 2', '输出 9 7 5 3 1', '输出 10 7 4 1', '输出 10 9 8 7 6 5 4 3 2 1', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (486, '下列哪个选项可以正确地将一个整型变量 i 转换成字符串类型？', 'itoa(i, str);', 'sprintf(str, "%d", i);', 'tostr(i, str);', 'inttostr(i, str);', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (487, '	在C语言中，以下代码将输出什么？
	#include <stdio.h>
	int main() {
	    char str[] = "Hello World";
	    char *ptr = str;
	    printf("%s", ptr);
	    return 0;
	}', 'Hello', 'World', 'Hello World', 'None of the above', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (488, '在C语言中，以下哪个函数可用于从内存中释放动态分配的内存？', 'free()', 'delete()', 'release()', 'dealloc()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (489, '	在C语言中，以下代码将输出什么？
	#include <stdio.h>
	#define SQUARE(x) x*x
	int main() {
	    int num = 2;
	    printf("%d", SQUARE(num + 1));
	    return 0;
	}', '6', '9', '5', 'Compilation error', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (490, '	在C语言中，以下代码将输出什么？
	#include <stdio.h>
	int main() {
	    int a = 10, b = 20;
	    int *const ptr = &a;
	    *ptr = 15;
	    // ptr = &b; // Compilation error
	    printf("%d", *ptr);
	    return 0;
	}', '10', '15', '20', 'Compilation error', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (491, '在C语言中，以下哪个关键字用于定义无返回值的函数？', 'void', 'int', 'double', 'char', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (492, '在C语言中，以下哪个运算符优先级最高？', '<<', '>=', '+', '++', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (493, '在C语言中，以下哪个宏定义预设了__LINE__和__FILE__变量？', '<stdli h>', '<stdio.h>', '<math.h>', '<assert.h>', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (494, '在C语言中，以下哪个关键字用于将标识符声明为全局变量？', 'auto', 'static', 'extern', 'register', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (495, '在C语言中，以下哪个函数用于在文件中定位文件指针位置？', 'ftell()', 'fseek()', 'fopen()', 'fclose()', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (496, '下列哪个语句可以将字符数组s中的所有元素初始化为0？', 'memset(s, 0, sizeof(s));', 's = "";', 'for (int i = 0; i < sizeof(s); i++) s[i] = 0;', 'strcpy(s, "");', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (497, '下列哪种声明方式不会引起编译器警告或错误？', 'int a[];', 'int *a;', 'int a[5];', 'int **a;', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (498, '	下列代码的输出结果是什么？
	#include<stdio.h>
	int main() {
	    int a = 10;
	    if(a == 10)
	        printf("Hello ");
	    else if(a > 10)
	        printf("World ");
	    else
	        printf("Goodbye ");
	    printf("Universe");
	    return 0;
	}', 'Hello Universe', 'World Universe', 'Goodbye Universe', 'No output', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (499, '下列哪个选项描述了指针变量p和变量x之间的关系？', 'p是指向x的指针变量。', 'x是指向p的指针变量。', 'p等同于x。', 'x等同于p。', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (500, '下面哪个选项描述了C语言中的“指针运算”？', '通过指针获取变量的地址', '使用指针作为数组下标访问元素', '在指针上执行算术运算', '将指针转换为整数类型', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (501, '在C语言中，sizeof运算符的结果是一个常量表达式。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (502, '在C语言中，指针变量和数组名都可以作为函数参数传递。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (503, '在C语言中，所有的指针类型都占用相同的字节数。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (504, '在C语言中，所有浮点数类型都支持取模（%）运算。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (505, '在C语言中，使用switch语句时，case标签可以是任意整数表达式。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (506, '在C语言中，函数调用可以嵌套，即一个函数可以调用另一个函数，而被调用的函数中又可以调用另一个函数。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (507, '在C语言中，const关键字用于声明常量，一旦赋值不能再修改。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (508, 'C语言中，每个函数都必须有一个返回类型，即使它不返回任何内容。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (509, '在C语言中，结构体变量可以作为函数的返回值。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (510, '在C语言中，字符常量和字符串常量是相同的。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (511, '在C语言中，可以使用逗号运算符来分隔多个表达式，其中，整个逗号表达式的值为最后一个逗号分隔的表达式的值。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (512, '使用指向函数的指针时，必须使用不同的名称来声明指针和函数本身。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (513, 'C语言中，可以通过将结构体传递给函数，实现结构体的拷贝操作。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (514, 'C语言中，数组名可以看作是一个指向数组首元素的指针。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (515, 'C语言中，所有的整数类型都可以用位运算符进行操作。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (516, 'C语言中，switch语句可以用于比较浮点数。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (517, 'C语言中，sizeof运算符返回的是指针变量的大小，而不是指向的对象的大小。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (518, 'C语言中，可以使用const关键字限制指针变量的值不能被修改。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (519, '在C语言中，字符串常量是一种字符数组，可以通过指针来访问。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (520, '在C语言中，下面的代码将导致编译出错：    int *p; *p = 10;    ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (521, 'C语言中的算术运算符和位运算符具有相同的优先级：', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (522, '当在C语言中使用sizeof运算符时，它返回一个函数的大小：', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (523, '在C语言中，对指针解引用操作符（*）和地址取用操作符（&）的优先级相同：', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (524, '声明一个指向常量的指针时，可以通过该指针修改常量的值：', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (525, '在C语言中，当指针被初始化为NULL时，它指向的是无效内存位置：', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (526, '通过使用const关键字，可以将一个变量声明为只读的：', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (527, '如果数组名作为参数传递给函数，则函数不能改变该数组的内容：', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (528, 'C语言中，函数参数的传递方式为值传递。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (529, 'C语言中，指针变量必须先初始化后才能使用。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (530, '在C语言中，if语句的条件表达式必须使用括号括起来。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (531, '在 C 语言中，指针是一种数据类型。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (532, '在 C 语言中，结构体可以包含函数。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (533, '在 C 语言中，预处理器指令必须以 # 开头。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (534, '在 C 语言中，逗号运算符会依次计算它的两个操作数，并返回最后一个操作数的值。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (535, 'C 语言中的 break 语句只能用于终止 switch 和循环语句。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (536, 'C 语言中的标识符可以包含空格和其他特殊字符。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (537, 'C语言中，结构体可以包含自己的类型。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (538, '在C语言中，变量名和函数名可以相同。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (539, 'C 语言中的 goto 语句通常被视为一种不好的编程习惯。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (540, '在C语言中，使用const关键字修饰指针类型变量，可以使指针所指向的数据成为只读数据。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (541, '下面哪些语句是真的？', 'sizeof(char) == 1', 'sizeof(short) <= sizeof(int)', 'sizeof(int) == sizeof(long)', 'sizeof(float) < sizeof(double)', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (542, '下面哪些变量是指针类型？', 'int *p;', 'int q[];', 'int r[10];', 'int **s;', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (543, '下面哪些定义是合法的？', '#define PI 3.14159265358979323846', 'const float PI = 3.14159;', 'enum days { Monday, Tuesday, Wednesday };', 'struct book { char title[100]; float price; };', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (544, '下面哪些方法可以在程序运行期间动态地分配内存？', 'malloc()', 'calloc()', 'realloc()', 'free()', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (545, '下列哪些关键字用于限制变量的作用域？', 'const', 'static', 'extern', 'register', 'BD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (546, '下列哪些数据类型的变量可以作为 switch 语句的表达式？', 'char', 'int', 'float', 'double', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (547, '下列哪些声明是合法的？', 'void f(int, char);', 'void g(int x, y);', 'void h(int a[], int n);', 'void (*p)(int);', 'ACD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (548, '下列哪些关于结构体的描述是正确的？（可多选）', '结构体是一种用户自定义的数据类型', '结构体中可以包含其他结构体', '可以使用 . 运算符访问结构体成员', '结构体成员必须是同种数据类型', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (549, '下面哪些调试方法可以用于找到程序中的潜在问题？（可多选）', '运行时检查', '栈跟踪', '内存泄漏检查', '输出日志文件', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (550, '下列关于指针的描述哪些是正确的？（可多选）', '指针不能指向自己', '指针只能指向同类型的变量', '指针可以与整数相加', '指针的大小取决于所在系统的位数', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (551, '下列关于内存管理的说法，哪些是正确的？  ', 'malloc函数用于动态分配内存。', 'free函数用于释放动态分配的内存。', '栈空间的大小由编译器静态分配，主要用于存储局部变量。', '堆空间的大小由操作系统动态分配，主要用于存储全局变量。', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (552, '下列哪些关于指针的说法是正确的？  ', '指针可以指向任何类型的数据。', '可以使用指针访问数组中的元素。', '指针可以被赋值为NULL。', 'sizeof运算符作用于指针时，返回指针类型占用的字节数。', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (553, '下面哪些类型的变量可以声明为static？  ', '局部变量', '全局变量', '函数参数', '结构体成员', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (554, '下列哪些关于函数指针的说法是正确的？  ', '函数指针可以作为函数的参数传递。', '函数指针可以作为函数的返回值。', '函数指针可以指向任何类型的函数。', '使用typedef可以给函数指针定义一个别名。', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (555, '下列哪些语句可以用于在 C 语言程序中声明一个常量数组？', 'const char str[10];', 'char const str[10];', 'char str[] = "constant";', 'const char *str = "constant";', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (556, '下列哪些选项是C语言中的存储类别说明符？  ', 'auto', 'static', 'extern', 'register', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (557, '下面哪个选项可以正确地定义一个不可修改的字符串类型的形参 str？', 'void foo(char *str) {}', 'void foo(const char *str) {}', 'void foo(char const *str) {}', 'void foo(char str[]) {}', 'BC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (558, '下列哪个选项可以正确地声明一个常量指针，该指针指向一个整型变量 i？', 'const int *p = i;', 'int const p = &i;', 'int *const p = &i;', 'int *p = &const i;', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (559, '在C语言中，以下哪个预处理器指令可以查找自定义头文件？', '#include "filename"', '#include <filename>', '#include filename', '#include <filename.h>', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (560, '下面哪个选项可以正确地定义一个枚举类型 color，包含元素red、green和blue？', 'enum color {red, green, blue};', 'enum color {"red", "green", "blue"};', 'struct color {char name[10]; int value;};', 'typedef enum {red, green, blue} color;', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (561, '下列哪个选项是正确的 C 语言中 sizeof 运算符的使用方式？', 'sizeof variable_type', 'sizeof(variable_name)', 'sizeof(variable_value)', 'sizeof(structure)', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (562, '以下哪个选项可以正确地将一个字符串转换成浮点数值？', 'atof(str);', 'strtof(str);', 'stof(str);', 'strtod(str);', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (563, '下列哪个选项可以正确地声明一个常量整型变量，其初始值为10？', 'const int x = 10;', 'int const x = 10;', 'int x = const 10;', 'int x const = 10;', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (564, '下面哪种方式声明的字符串数组可以被修改？', 'a) char *str = "hello";', 'b) char str[] = "hello";', 'c) const char *str = "hello";', 'd) const char str[] = "hello";', 'BD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (565, '下面哪个关键字用于创建新的数据类型？', 'typedef', 'define', 'struct', 'enum', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (566, '下面哪个代码片段将输出结果为0？', 'int x = 4; int y = 2; int z = x & y; printf("%d", z);', 'int x = 4; int y = 2; int z = x | y; printf("%d", z);', 'int x = 4; int y = 2; int z = x ^ y; printf("%d", z);', 'int x = 4; int y = 2; int z = ~x; printf("%d", z);', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (567, '下面哪个代码片段将返回一个指向堆分配内存的指针？', 'int *p = malloc(sizeof(int));', 'int *p; p = &x;', 'int *p = (int *) malloc(4);', 'int *p = sizeof(int);', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (568, '下面哪个变量声名是正确的？', ' int i;', 'int * const p;', ' void (*f)(int);', ' char* const str;', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (569, '下列哪个语句在运行时不会检查数组下标是否越界？', ' a[i]', ' i[a]', ' *(a+i)', ' a[i++];', 'CD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (570, '下列哪个语句是对指向一维数组的指针进行声明的？', ' int **p;', ' int p[];', ' int *p[];', 'int*p = &(a[0])', 'CD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (571, '下列哪些是 C 语言关键字？   ', 'for', 'do', 'int', 'new', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (572, '下列哪些声明方式可以定义一个 const 指针变量 p，它指向整型数组 a 的首元素？   ', 'const int *p = a;', 'int const *p = a;', 'int *const p = a;', 'const int *const p = a;', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (573, '下面有关结构体的说法哪些是正确的？   ', '结构体是 C 语言中的一种复合数据类型。', '可以通过结构体访问其中的成员变量。', '可以通过结构体访问其中的成员函数。', '可以在结构体中嵌套其他结构体。', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (574, '下列哪些是文件访问模式？   ', 'r', 'w', 'b', 'a', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (575, '下列哪些关系是正确的？   ', '数组名是常量指针。', '数组名是常量。', '指针变量存放的是地址。', '取出指针变量的值需要使用 & 运算符。', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (576, '下面有关预处理指令的说法哪些是正确的？   ', '预处理指令以 # 开头。', '预处理指令不能混杂在普通代码中。', '预处理指令不会参与编译和链接。', '预处理指令可以用来定义宏。', 'ACD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (577, '下面哪些运算符可以被重载？   ', '+', '*', '!', '==', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (578, '下面哪些声明方式可以在C语言中定义一个函数指针？   ', 'int (*fp)(int, int);', 'typedef int (*FP)(int, int);', 'void fp(int, int);', 'int fp[];', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (579, '下列哪些选项是正确的关于枚举类型的描述？   ', '枚举类型是一种用户自定义的数据类型。', '枚举类型可以包含多个枚举值。', '枚举值默认从 0 开始递增。', '枚举值的类型必须是 int 类型或者较小的整数类型。', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (580, '下列关于结构体的描述中，哪些是正确的？   ', '结构体可以包含指向自身类型的指针。', '结构体变量作为函数参数传递时会被拷贝。', '可以使用 typedef 定义结构体类型的别名。', '结构体内部的成员变量是按字节对齐的。', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (581, '在 Python 中，下面哪个函数可以用于将一个字符串转换为大写？', 'upper()', 'lower()', 'capitalize()', 'title()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (582, '在 Python 中，下面哪个方法可以用于对列表元素进行排序？', 'sorted()', 'sort()', 'reverse()', 'index()', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (583, '在 Python 中，下面哪个运算符可以用于检查两个值是否不相等？', '==', '!=', '<>', '><', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (584, '在 Python 中，下面哪个关键字可以用于定义一个类？', 'class', 'def', 'import', 'from', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (585, '在 Python 中，下面哪个方法可以用于从列表中删除所有元素？', 'remove()', 'pop()', 'del', 'clear()', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (586, '在 Python 中，下面哪个模块提供了支持文件和目录操作的工具？', 'os', 'io', 'sys', 'math', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (587, '在 Python 中，下面哪个数据类型可以存储一组键-值对？', 'List', 'Set', 'Tuple', 'Dictionary', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (588, '在 Python 中，下面哪个函数可以用于获取当前日期和时间？', 'datetime.now()', 'time.now()', 'date.now()', 'timestamp.now()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (589, '在 Python 中，下面哪个运算符可以用于将两个字符串比较，并返回它们的字典序关系？', '==', '!=', '>', '<', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (590, '在 Python 中，可以使用单引号或双引号来定义字符串。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (591, '在 Python 中，使用 # 号开头的语句是注释，不会被解释器执行。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (592, '在 Python 中，使用无限循环可以让程序一直执行下去，直到手动停止或遇到异常。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (593, '在 Python 中，使用 if-else 语句可以实现条件判断和分支控制。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (594, '在 Python 中，使用 for-in 循环可以遍历列表、元组、集合和字典等数据类型。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (595, '在 Python 中，使用 del 关键字可以删除变量或对象。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (596, '在 Python 中，使用 try-except 语句可以捕获并处理异常情况，防止程序崩溃。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (597, '在 Python 中，使用 break 关键字可以退出循环并终止其余的迭代。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (598, '在 Python 中，使用 range() 函数可以生成一个整数序列，用于循环和赋值等操作。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (599, '在 Python 中，使用 continue 关键字可以跳过当前迭代，继续执行下一次迭代。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (600, '下面哪些Python内置函数可以用于对列表进行操作？（多选）', 'A.len()', 'B.sort()', 'C.append()', 'D.pop()', 'BCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (601, '下列哪些模块/库可以用于进行科学计算和数据分析？（多选）', 'A.NumPy', 'B.Pandas', 'C.SciPy', 'D.Matplotlib', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (602, '在Python中，下列关于if语句的描述哪些是正确的？（多选）', 'A.if语句可以嵌套', 'B.if语句可以包含else子句', 'C.if语句必须包含elif子句', 'D.if语句的条件表达式可以是任意的布尔型表达式', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (603, '在Python中，下列哪些操作可以在列表中添加元素？（多选）', 'A.append()', 'B.extend()', 'C.insert()', 'D.remove()', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (604, '在Python中，下列哪些运算符可以用于比较两个值的大小？（多选）', '==', '!=', 'C.>', 'D.<', 'CD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (605, '在Python中，下列哪些方法可以用于将字符串转换为数字类型？（多选）', 'A.int()', 'B.float()', 'str()', 'D.eval()', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (606, '在Python中，下列哪些关于for循环的描述是正确的？（多选）', 'A.for循环可以遍历任何可迭代对象', 'B.for循环可以嵌套', 'for 循环必须包含 continue 语句', 'D.for循环可以包含else子句', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (607, '在Python中，下列哪些方法可以用于对字符串进行操作？（多选）', 'A.upper()', 'B.lower()', 'C.capitalize()', 'D.isupper()', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (608, '在Python中，下列哪些关于函数参数的描述是正确的？（多选）', 'A.函数可以接受不定数量的位置参数', 'B.函数可以接受不定数量的关键字参数', '函数的参数类型必须在定义时指定', 'D.函数的参数可以有默认值', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (609, '在Python中，下列哪些方法可以用于从列表中删除元素？（多选）', 'A.pop()', 'B.remove()', 'clear()', 'D.del', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (610, '下列哪种数据类型在Python中是不可变的？', '列表 (list)', '字典 (dictionary)', '元组 (tuple)', '集合 (set)', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (611, '在Python中，使用哪个关键字定义一个函数？', 'def', 'function', 'define', 'func', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (612, '	下面的代码将输出什么结果？
	a = [1, 2, 3]
	b = a
	a.append(4)
	print(b)', '[1, 2, 3]', '[1, 2, 3, 4]', '[4, 3, 2, 1]', '报错', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (613, '下列哪种循环语句可以遍历列表、元组和字典等数据结构？', 'for 循环', 'while 循环', 'do-while 循环', 'switch-case', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (614, '	下面的代码将输出什么结果？
	a = "hello"
	b = a.capitalize()
	print(b)', '"HELLO"', '"Hello"', '"hello"', '报错', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (615, '在Python中，使用哪个关键字声明一个变量为全局变量？', 'global', 'local', 'var', 'const', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (616, '下列哪种数据类型表示布尔值？', 'bool', 'int', 'float', 'str', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (617, '	下面的代码将输出什么结果？
	a = (1, 2, 3)
	b = a[1:]
	print(b)', '(1, 3)', '(2, 3)', '(1, 2)', '报错', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (618, 'Python中如何清空一个列表？', '使用 del 关键字', '使用 remove() 方法', '使用 clear() 方法', '使用 pop() 方法', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (619, '下列哪个函数可以返回指定字符串在另一个字符串中第一次出现的位置？', 'replace()', 'count()', 'index()', 'find()', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (620, '在 Python 中，字符串属于不可变类型。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (621, 'Python 的注释可以用 # 和 \'\'\' \'\'\' 两种方式进行。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (622, '如果一个函数没有使用 return 关键字，则它默认返回 None。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (623, '在 Python 中，整数、浮点数和布尔值都属于数字类型。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (624, 'Python 中，列表和元组都是有序的数据结构。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (625, '在 Python 中，使用 del 关键字可以删除列表中指定位置的元素。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (626, '在 Python 中，使用 for 循环时，可以通过 range() 函数来生成一系列连续的整数。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (627, '在 Python 中，使用 break 关键字可以跳出当前所在的循环。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (628, '在 Python 中，使用 if-elif-else 语句可以实现多分支逻辑判断。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (629, '在 Python 中，使用 try-except 语句可以捕获异常并进行相应的处理。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (630, '下列哪些方法可以用于将列表中的元素按照指定顺序排序？', 'sort()', 'sorted()', 'reverse()', 'pop()', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (631, '下面哪些方法可以对列表进行删除操作？', 'pop()', 'remove()', 'del', 'clear()', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (632, '下列哪些数据结构是可变类型？', '列表 (list)', '元组 (tuple)', '字典 (dictionary)', '集合 (set)', 'ACD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (633, '在 Python 中，下列哪些运算符可以用于比较两个变量的值是否相等？', '==', '!=', '>', '>=', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (634, '下面哪些方法可以从字符串中去掉指定字符或子串？', 'replace()', 'strip()', 'split()', 'join()', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (635, '下列哪些关键字可以用于定义 Python 函数中的参数？', 'parameter', 'def', 'return', 'default', 'BD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (636, '下面哪些方法可以在 Python 字典中添加新的键值对？', 'update()', 'insert()', 'append()', 'setdefault()', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (637, '下面哪些方法可以将字符串转换成整数？', 'int()', 'str()', 'float()', 'eval()', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (638, '在 Python 中，下列哪些数据类型是有序的？', '列表 (list)', '字典 (dictionary)', '集合 (set)', '元组 (tuple)', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (639, '在 Python 中，以下哪些模块可以用于文件操作？', 'os', 'sys', 'shutil', 'io', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (640, '以下哪个选项中所列出的所有数据类型在 Python 中都是不可变类型？', 'int、float、bool', 'str、tuple、frozenset', 'list、set、dict', 'complex、bytes、bytearray', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (641, '下面哪个选项中所列函数可以用于将字符串转换为小写形式？', 'capitalize()', 'swapcase()', 'lower()', 'upper()', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (642, '在 Python 中，下列哪个语句可以创建一个空的集合？', 'x = {}', 'x = set()', 'x = []', 'x = ""', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (643, '下面哪个选项中所列操作符可以用于对两个列表进行拼接？', '+', '-', '*', '/', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (644, '在 Python 中，下面哪个方法可以移除列表中指定位置的元素？', 'pop()', 'remove()', 'clear()', 'del', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (645, '下面哪个函数可以返回字符串的长度？', 'length()', 'count()', 'size()', 'len()', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (646, '在 Python 中，下面哪个选项可以用于将两个字符串拼接成一个新的字符串？', 'join()', 'replace()', 'strip()', 'split()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (647, '下面哪个选项中给出的所有数据类型在 Python 中都是有序的？', 'list、set、dict', 'tuple、set、dict', 'list、tuple、str', 'set、frozenset、tuple', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (648, '在 Python 中，下面哪个方法可以在列表的末尾添加一个新的元素？', 'add()', 'insert()', 'push()', 'append()', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (649, '下面哪个选项中所列操作符可以用于对两个数值进行取模运算？', '%', '&', '|', '^', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (650, '在 Python 中，元组和列表都是可变类型。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (651, 'Python 中，可以使用 type() 函数来获取一个对象的数据类型。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (652, '如果一个函数中没有使用 return 关键字，则默认返回 None。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (653, '在 Python 中，True 和 False 都是关键字。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (654, '在 Python 中，字符串可以使用单引号或双引号来表示。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (655, '在 Python 中，使用 for 循环可以遍历任何可迭代对象。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (656, '在 Python 中，使用 break 关键字可以跳出当前所在的循环。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (657, '在 Python 中，使用 if-elif-else 语句可以实现多分支逻辑判断。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (658, '在 Python 中，try-except 语句可以用于捕获异常并进行相应的处理。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (659, '在 Python 中，所有数值类型都是不可变类型。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (660, '在 Python 中，下列哪种数据类型可以用来表示浮点数？', 'int', 'float', 'bool', 'str', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (661, '下面哪个函数可以将一个对象转换为字符串？', 'str()', 'int()', 'float()', 'bool()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (662, '下面哪个选项中所列方法可以从列表中删除指定元素？', 'remove()', 'pop()', 'del', 'clear()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (663, '在 Python 中，下面哪种运算符用于对两个数进行整除操作？', '/', '//', '%', '*', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (664, '下列哪个选项中所列操作符可以用于比较两个变量的值是否相等？', '==', '!=', '>', '>=', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (665, '下面哪个选项中所列方法可以用于在列表中添加一个新的元素？', 'add()', 'insert()', 'push()', 'append()', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (666, '在 Python 中，下面哪个关键字可以用于声明一个变量为全局变量？', 'var', 'const', 'global', 'nonlocal', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (667, '下面哪个函数可以返回列表、元组或字符串中最大的元素？', 'max()', 'min()', 'sort()', 'sorted()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (668, '在 Python 中，下面哪个操作符可以用于对两个字符串进行拼接操作？', '+', '-', '*', '/', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (669, '下面哪个选项中所列方法可以用于在 Python 字典中删除指定键和对应的值？', 'remove()', 'delete()', 'pop()', 'clear()', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (670, '在 Python 中，元组和列表都是可变类型。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (671, 'Python 中，可以使用 type() 函数来获取一个对象的数据类型。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (672, '如果一个函数中没有使用 return 关键字，则默认返回 None。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (673, '在 Python 中，True 和 False 都是关键字。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (674, '在 Python 中，字符串可以使用单引号或双引号来表示。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (675, '在 Python 中，使用 for 循环可以遍历任何可迭代对象。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (676, '在 Python 中，使用 break 关键字可以跳出当前所在的循环。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (677, '列表和集合是有序的容器类型。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (678, '在 Python 中，try-finally 语句可以用于捕获异常并进行相应的处理。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (679, '在 Python 中，所有数值类型都是可变类型。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (680, '在 Python 中，下面哪种数据类型是可迭代的？', 'List', 'Set', 'Tuple', 'String', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (681, '在 Python 中，下列哪些数据类型属于可变类型？', 'A. 数字类型 (int、float、bool)', 'B. 列表', 'C. 字典 (dictionary)', 'D. 元组', 'BC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (682, '下列哪些方法可以用于在列表中添加一个新的元素？', 'A. add()', 'B. insert()', 'C. push()', 'D. append()', 'BD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (683, '在 Python 中，下列哪些关键字可以用于控制循环流程？', 'A. break', 'B. continue', 'C. pass', 'D. return', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (684, '下面哪些函数可以用于将字符串转换为整数或浮点数？', 'A. int()', 'B. float()', 'C. str()', 'D. bool()', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (685, '在 Python 中，下列哪些函数可以用于对列表元素进行排序操作？', 'A. sort()', 'B. sorted()', 'C. reverse()', 'D. shuffle()', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (686, '下面哪些操作符可以用于比较两个变量的值是否相等？', 'A. ==', 'B. !=', 'C. >', 'D. >=', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (687, '在 Python 中，下列哪些函数可以用于获取字符串的子串？', 'A. split()', 'B. join()', 'C. replace()', 'D. slice()', 'CD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (688, '下面哪些方法可以用于在 Python 字典中添加新的键值对？', 'A. setdefault()', 'B. insert()', 'C. push()', 'D. update()', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (689, '在 Python 中，下列哪些函数可以用于获取列表的长度或元素个数？', 'A. len()', 'B. count()', 'C. size()', 'D. index()', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (690, '在 Python 中，以下哪些模块可以用于文件操作？', 'A. os', 'B. sys', 'C. shutil', 'D. io', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (691, '在Android中，以下哪些存储方式是应用程序私有的？', 'Shared Preferences', 'Internal Storage', 'External Storage', 'SQLite数据库', 'BD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (692, '在Android中，以下哪些类是应用程序组件？', 'Activity', 'View', 'Service', 'BroadcastReceiver', 'ACD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (693, '在Android中，以下哪些方法可以在后台线程执行任务并更新UI？', 'runOnUiThread()', 'doInBackground()', 'onPostExecute()', 'onProgressUpdate()', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (694, '以下哪些是Intent的作用？', '启动Activity', '启动Service', '发送Broadcast', '创建线程', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (695, '在Android中，以下哪些操作需要申请权限？', '访问网络', '读写本地文件', '获取设备位置信息', '启动Activity', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (696, '在Android中，以下哪些类用于向系统发送广播？', 'Intent', 'BroadcastReceiver', 'Activity', 'Service', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (697, '在Android中，以下哪些周期函数在Activity生命周期中被调用？', 'onCreate()', 'onStart()', 'onResume()', 'onStop()', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (698, '在Android中，以下哪些方法可以在Service内部创建新线程？', 'onStartCommand()', 'onCreate()', 'onHandleIntent()', 'onBind()', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (699, '在Android中，以下哪些类用于管理和操作SQLite数据库？', 'SQLiteDatabase', 'SQLiteOpenHelper', 'SQLiteManager', 'SQLiteCursor', 'BD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (700, '在Android中，以下哪些类用于显示对话框？', 'AlertDialog', 'Toast', 'Snackbar', 'ProgressDialog', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (701, '在 Python 中，下列哪个函数可以用于获取字符串的长度？', 'A. length()', 'B. count()', 'C. size()', 'D. len()', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (702, '下面哪个运算符可以用于计算两个数的幂？', 'A. **', 'B. //', 'C. %', 'D. &', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (703, '在 Python 中，下列哪个数据类型用于表示一组无序、不重复的元素？', 'A. 字典 (dictionary)', 'B. 元组 (tuple)', 'C. 列表 (list)', 'D. 集合 (set)', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (704, '下列哪个函数可以将字符串中的字母全部转换为小写？', 'A. lower()', 'B. upper()', 'C. swapcase()', 'D. capitalize()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (705, '在 Python 中，下列哪个关键字可以用于声明一个函数？', 'A. def', 'B. func', 'C. fun', 'D. function', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (706, '下列哪个函数可以用于获取列表中指定范围内的子列表？', 'A. slice()', 'B. sub()', 'C. subset()', 'D. splice()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (707, '下面哪个选项中所列方法可以用于从 Python 字典中获取指定键对应的值？', 'A. get()', 'B. pop()', 'C. remove()', 'D. clear()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (708, '在 Python 中，下列哪种运算符可以用于将两个字符串进行拼接操作？', 'A. +', 'B. -', 'C. *', 'D. /', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (709, '下面哪个选项中所列方法可以用于从列表中删除指定索引处的元素？', 'A. remove()', 'B. pop()', 'C. del', 'D. clear()', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (710, '在 Python 中，下列哪个关键字可以用于控制循环流程并进行下一轮循环？', 'A. break', 'B. continue', 'C. pass', 'D. return', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (711, '在Python中，bool(x)函数返回x的布尔值，其中0、空字符串、空列表和空字典等为False。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (712, '在Python中，可以使用for循环遍历所有可迭代的对象，包括列表、元组、集合、字典、字符串等。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (713, '在Python中，else语句只能用在if语句中，并且必须紧跟在if或elif语句之后。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (714, '在Python中，try...except语句用于捕获异常并处理它们。如果没有代码抛出异常，则try块中的代码将被执行，而except块中的代码将被跳过。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (715, '在Python中，可以使用break语句中断循环，并强制退出循环体。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (716, '在Python中，可以使用continue语句跳过本次循环迭代，直接进入下一次迭代。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (717, '在Python中，lambda表达式是一种匿名函数，可以在需要时动态地创建函数对象。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (718, '在Python中，可以使用pass语句占位，代表一个空的代码块，不做任何操作。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (719, '在Python中，可以使用assert语句来判断一个条件是否为真，如果不是则抛出异常。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (720, '在Python中，可以使用with语句来管理资源，例如文件、网络连接等，保证在使用完毕后自动关闭或释放资源。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (721, '在 Python 中，下列哪些数据类型属于不可变类型？（可多选）', 'A.字符串 (string)', 'B. 字典 (dictionary)', 'C. 元组 (tuple)', 'D. 集合 (set)', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (722, '下列哪些方法可以用于在列表中删除指定元素？（可多选）', 'A. remove()', 'B. pop()', 'C. del', 'D. discard()', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (723, '在 Python 中，下列哪些关键字可以用于定义一个类？（可多选）', 'A. class', 'B. def', 'C. self', 'D. init', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (724, '下列哪些关键字可以用于控制循环？', 'A. break', 'B. continue', 'C. pass', 'D. exit', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (725, '在 Python 中，下列哪些运算符可以用于逻辑运算？（可多选）', 'A. and', 'B. or', 'C. not', 'D. xor', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (726, '下列哪些方法可以用于在 Python 列表中插入新的元素？（可多选）', 'A. insert()', 'B. append()', 'C. extend()', 'D. add()', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (727, '在 Python 中，下列哪些函数可以用于获取列表中最大或最小的元素？（可多选）', 'A. max()', 'B. min()', 'C. count()', 'D. index()', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (728, '下列哪些方法可以用于在列表中添加元素？', 'A. append()', 'B. extend()', 'C. insert()', 'D. concat()', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (729, '在 Python 中，下列哪些关键字可以用于处理异常？（可多选）', 'A. try', 'B. catch', 'C. except', 'D. finally', 'ACD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (730, '下列哪些函数可以用于获取 Python 字典中所有的键或值？（可多选）', 'A. keys()', 'B. values()', 'C. items()', 'D. get()', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (731, '下面哪个不能作为 Python 的变量名？ ', 'my_var', '123abc', 'myVar', '_myvar', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (732, '在 Python 中，如何将一个列表按升序排序？ ', 'list.sort()', 'sort(list)', 'sorted(list)', 'sort(list, reverse=False)', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (733, '下面哪个关键字可以用于定义一个函数？ ', 'class', 'def', 'function', 'module', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (734, '下面哪个方法可以从列表中移除指定索引位置的元素并返回它？ ', 'list.pop()', 'list.remove()', 'list.delete()', 'list.slice()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (735, '在 Python 中，如何打开一个文件以供读取？ ', 'open(\'filename.txt\', \'r\')', 'open(\'filename.txt\', \'w\')', 'open(\'filename.txt\', \'a\')', 'open(\'filename.txt\')', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (736, '下面哪个关键字可以用于引发异常？ ', 'assert', 'raise', 'try', 'except', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (737, '在 Python 中，如何创建一个空的字典？ ', '{}', 'dict()', 'new dict()', 'empty dict()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (738, '下面哪个方法可以将字符串转换为小写形式？ ', 'str.to_lower()', 'str.lowercase()', 'str.lower()', 'str.casefold()', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (739, '下面哪个运算符可以用于判断两个值是否相等？ ', '==', '!=', '<', '>', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (740, '在 Python 中，如何获取一个列表的长度？ ', 'list.length()', 'len(list)', 'list.size()', 'size(list)', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (741, '下面哪个Python数据结构是可变类型？', '元组 (tuple)', '列表 (list)', '字符串 (string)', '集合 (set)', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (742, '在Python中，下面哪个关键字用于定义函数？', 'def', 'function', 'define', 'func', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (743, '可以使用哪个Python内置函数获取字符串的长度？', 'length()', 'size()', 'len()', 'count()', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (744, '	下面的代码段将打印什么结果？
	x = 5
	y = 2
	print(x / y)', '2.5', '2', '3', '2.25', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (745, '在Python中，下面哪个关键字用于创建一个类？', 'class', 'create', 'object', 'new', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (746, '下面哪个操作符用于判断两个值是否相等？', '==', '=', '!=', '<>', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (747, '在Python中，下面哪个模块可以用于处理日期和时间？', 'datetime', 'math', 'os', 'random', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (748, '	下面的代码段将打印什么结果？
	my_list = [1, 2, 3]
	print(my_list[1])', '1', '2', '3', '1 2 3', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (749, '在Python中，下面哪个关键字用于引发异常？', 'raise', 'throw', 'except', 'try', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (750, '在Python中，以下哪个选项用于在控制台输出一行空白？', 'print("\\n")', 'print(" ")', 'print("\\t")', 'print(""")', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (751, '在Python中，下列哪个操作符可以用于比较两个变量的值和类型是否相同？ ', '==', '!=', '<=>', 'is', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (752, '下列哪个函数可以返回字符串中指定子串的出现次数？ ', 'count()', 'find()', 'index()', 'replace()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (753, '下列哪个关键字用于定义Python中的函数？ ', 'def', 'function', 'class', 'var', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (754, '下列哪个语句可以将一个列表中的元素按照从小到大的顺序排列？ ', 'list.sort()', 'sorted(list)', 'list.reverse()', 'reversed(list)', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (755, '在Python中，下列哪种数据类型可以使用索引来获取其中的元素？ ', '字典', '元组', '集合', '列表', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (756, '下列哪个函数可以在Python中打印输出文本？ ', 'print()', 'input()', 'len()', 'range()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (757, '下列哪个语句可以从列表中删除指定的元素？ ', 'list.remove()', 'list.pop()', 'list.clear()', 'del list[index]', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (758, '下列哪个模块可以用于处理日期和时间相关的操作？ ', 'math', 'datetime', 'os', 'random', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (759, '下列哪个语句可以将一个字符串转换为整型？ ', 'str()', 'int()', 'float()', 'bool()', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (760, '下列哪个运算符可以对两个变量进行逻辑与操作？ ', '&&', '||', '!', 'and', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (761, '以下哪个是 Python 的保留关键字？ ', 'class', 'def', 'function', 'variable', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (762, '在 Python 中，下列哪个数据类型表示一个无序、不重复的集合？ ', 'list', 'tuple', 'dict', 'set', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (763, '假设有列表 a = [1, 2, 3, 4]，则执行 a[1:3] 后，a 的值为： ', '[1, 2]', '[2, 3]', '[2, 3, 4]', '[1, 2, 3]', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (764, '在 Python 中，下面哪个操作符用于逻辑“或”运算？ ', '&&', 'and', 'or', 'not', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (765, '以下哪个内置函数可以用于获取字符串的长度？ ', 'len()', 'str()', 'int()', 'float()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (766, '在 Python 中，下列哪个循环语句用于遍历一个可迭代对象中的元素？ ', 'for loop', 'while loop', 'do-while loop', 'foreach loop', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (767, '如果要在 Python 中创建一个空的字典，应该使用下列哪个语法？ ', 'my_dict = []', 'my_dict = {}', 'my_dict = ()', 'my_dict = \'\'', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (768, '在 Python 中，如何打开一个文件以供读取？ ', 'open(\'file.txt\', \'w\')', 'open(\'file.txt\', \'r\')', 'open(\'file.txt\', \'a\')', 'open(\'file.txt\', \'x\')', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (769, '在 Python 中，以下哪个关键字用于创建一个类？ ', 'class', 'def', 'import', 'from', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (770, '下列哪个 Python 内置函数可用于将一个对象转换为字符串？ ', 'str()', 'int()', 'float()', 'list()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (771, '下列哪个方法可以在Python中删除指定字典中的键值对？ ', 'remove()', 'delete()', 'pop()', 'erase()', 'C', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (772, '在Python中，以下哪个函数可以将一个字符串转换为整数？ ', 'str()', 'int()', 'float()', 'bool()', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (773, '下面哪个关键字可以用于定义一个函数？ ', 'function', 'def', 'define', 'func', 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (774, '如果想要在Python中打印出一个变量的数据类型，应该使用哪个函数？ ', 'type()', 'print_type()', 'data_type()', 'typeof()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (775, '在Python中，以下哪个运算符可以用于判断两个值是否相等？ ', '==', '=', '!=', '<>', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (776, '在Python中，如何将一个列表中的元素按照一定规则进行排序？ ', 'sort()', 'reverse()', 'append()', 'remove()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (777, '下列哪个语句可以用于从列表中删除指定的元素？ ', 'list.remove(item)', 'list.pop(index)', 'del list[index]', 'All of the above', 'D', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (778, '在Python中，以下哪种循环结构可以遍历一个序列中的所有元素？ ', 'for循环', 'while循环', 'do-while循环', '以上都可以', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (779, '在Python中，以下哪个方法可以将一个字符串转换为大写字母？ ', 'str.upper()', 'str.lower()', 'str.title()', 'str.capitalize()', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (780, '在Python中，如何打开一个文件并以追加模式写入内容？ ', 'open(filename, \'a\')', 'open(filename, \'r\')', 'open(filename, \'w\')', 'open(filename, \'x\')', 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (781, '在 Python 中，字符串和整数可以相加组成新的字符串', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (782, '在 Python 中，可以使用 if 和 else 关键字来实现条件语句', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (783, '在 Python 中，列表中的元素可以是不同的数据类型', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (784, '在 Python 中，可以使用 for 循环遍历列表、元组、集合等可迭代对象', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (785, '在 Python 中，可以使用 try 和 except 关键字来捕获异常', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (786, '在 Python 中，可以使用 while 循环来执行无限循环任务', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (787, '在 Python 中，可以使用 with 关键字来打开文件，并在结束后自动关闭文件', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (788, '在 Python 中，可以使用 break 关键字来跳出循环', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (789, '在 Python 中，可以使用 lambda 关键字来创建匿名函数', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (790, '在 Python 中，字符串是可变的数据类型', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (791, 'Python 中列表中的元素可以是不同的数据类型', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (792, '使用 break 语句可以跳出 for 循环或 while 循环', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (793, '不管在哪个作用域中定义，使用 global 关键字可以将变量声明为全局变量', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (794, '在 Python 中，可以使用 lambda 表达式创建匿名函数', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (795, '在 Python 中，try-except 块可以用于捕获和处理异常', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (796, 'Python 中的集合不允许重复元素', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (797, 'Python 中的可迭代对象包括列表、元组、字典和集合等', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (798, 'Python 中的浅拷贝只会复制对象的引用，而不会复制对象本身', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (799, 'Python 中的多线程可以提高程序的执行效率', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (800, 'Python中的变量名可以包含空格和特殊字符', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (801, '在Python中，赋值语句会创建一个新的对象并将其绑定到变量上', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (802, '下列语句可以用于从Python列表中删除第一个元素：list.remove(0)', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (803, '在Python中，可以使用多个 elif 来检查多个条件，并且最终的 else 块是可选的', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (804, '当在Python中使用 import 导入一个模块时，Python解释器会查找指定的模块文件，并执行其中的代码', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (805, '下列Python代码片段可以用于打印出整数1到10之间所有的偶数：for i in range(1, 11):    if i % 2 == 0: print(i)', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (806, 'Python中的 tuple 和 list 都是可变类型。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (807, '在Python中，可以使用 try 和 except 块来捕获程序中可能出现的异常并进行处理。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (808, '字符串格式化操作可以通过 % 运算符或者 .format() 方法进行。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (809, '在Python中，可以使用 break 语句来立即退出当前的循环。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (810, 'Python语言是一种编译型语言。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (811, '在Python中，变量必须在使用之前进行声明。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (812, '在Python中，列表和元组是可变数据类型。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (813, '在Python中，函数可以返回多个值。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (814, '在Python中，下划线（_）用于表示私有方法或变量。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (815, '在Python中，大括号 {} 用于创建字典。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (816, 'Python中的三元运算符的语法是 x if condition else y。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (817, '在Python中，类中的 init 方法用于初始化对象的属性。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (818, '在Python中，可以使用 try/except 语句来处理程序中的异常。 ', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (819, '在Python中，逻辑运算符 and 和 or 具有相同的优先级。 ', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (820, 'Python中的变量可以在不声明类型的情况下直接使用。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (821, '在Python中，条件语句的代码块必须用花括号括起来。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (822, '在Python中，使用 "==" 运算符比较两个对象是否相等。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (823, '在Python中，使用 "and" 运算符表示逻辑与，使用 "or" 运算符表示逻辑或。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (824, '在Python中，使用 "not" 运算符表示逻辑非。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (825, '在Python中，列表（list）和元组（tuple）都是可变的数据类型。', '正确', '错误', null, null, 'B', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (826, '在Python中，字典（dict）可以使用键值对的方式存储数据。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (827, '在Python中，使用 for 循环时，迭代变量会自动从序列中取出每个元素。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (828, '在Python中，try/except语句用于捕获和处理异常。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (829, '在Python中，函数可以返回多个值，并且返回的值可以是不同类型的数据。', '正确', '错误', null, null, 'A', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (830, '下列哪些是Python的保留关键字？', 'for', 'if', 'then', 'try', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (831, 'Python中，函数调用时参数可以按照下列哪些方式传递？', '位置参数', '关键字参数', '默认参数', '可变参数', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (832, '在Python中，下列哪些算术运算符具有相同的优先级？', '*', '/', '%', '//', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (833, '下列哪些数据类型是可变的？', 'dict', 'int', 'tuple', 'list', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (834, '在Python中，下列哪些方法可以用于从列表中删除指定元素？', 'remove()', 'pop()', 'del()', 'clear()', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (835, '下列哪些是Python中的内置函数？', 'print()', 'input()', 'range()', 'open()', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (836, '下列哪些语句可以打开一个文件并将其内容写入文件？', 'file = open(filename, "r") ; file = open(filename, "w") ; file.write(data) ; file.close()答案：B、C、D', 'file = open(filename, "w") ; file.write(data) ; file.close()答案：B、C、D', 'file.write(data)', 'file.close()', 'BCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (837, '在Python中，下列哪些数据类型是有序的？', 'str', 'int', 'tuple', 'list', 'ACD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (838, '在Bash中，以下哪些命令可以用于列出当前目录下所有文件、子目录？', 'ls -a', 'ls -l', 'ls -R', 'cd', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (839, '在Python中，下列哪些语句可以用于循环执行某个代码块？', 'for x in range(10):', 'while True:', 'do-while', 'if x > 0:', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (840, ' 在Python中，以下哪些数据类型是不可变的？', '列表（list）', '字符串（string）', '元组（tuple）', '集合（set）', 'BC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (841, '下列哪些方法可以用于将一个字符串转换为整数？', 'int(string)', 'string.toInt()', 'float(string)', 'eval(string)', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (842, '在Python中，以下哪些方法用于从列表中删除指定的元素？', 'remove(element)', 'pop(index)', 'del list[index]', 'clear()', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (843, '在Python中，以下哪些方法可以用于获取一个字符串的子字符串？', 'slice(start, end)', 'substring(start, end)', 'str[start:end]', 'split(delimiter)', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (844, ' 在Python中，以下哪些数据类型可以用作字典的键？', '整数', '浮点数', '布尔值', '字符串', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (845, '在Python中，以下哪些运算符可以用于比较两个布尔值？', '==', '!=', '>', '<', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (846, '在Python中，以下哪些方法可以用于获取列表的最大值、最小值？', 'max(list)', 'min(list)', 'list.max()', 'list.min()', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (847, '在Python中，以下哪些操作符可以用于将两个列表进行合并？', '+', '-', '*', '/', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (848, '在Python中，以下哪些方法可以用于对字符串进行替换操作？', 'replace(old, new)', 'format(args)', 'join(iterable)', 'split(delimiter)', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (849, '在Python中，以下哪些方法可以用于对列表进行排序操作？', 'sort()', 'sorted()', 'reverse()', 'shuffle()', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (850, '下列关于Python中变量的描述，哪些是正确的？', '变量名可以包含数字', '变量名必须以字母开头', '变量名可以使用下划线', '变量名不能包含空格', 'CD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (851, '下列哪些关于Python中列表的描述是正确的？', '列表中的元素类型必须相同', '列表中的元素类型可以不同', '列表可以动态增加或删除元素', '列表中的元素可以通过索引访问', 'BCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (852, '下列哪些关于Python中循环语句的描述是正确的？', 'Python中有while和for两种循环语句', '循环体必须包含在大括号内', 'break语句可以用于退出循环', 'continue语句可以用于跳过当前循环迭代', 'ACD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (853, '下列哪些关于Python中函数参数的描述是正确的？', '函数必须指定参数类型', '函数参数可以有默认值', '函数参数可以是可变长度的', '函数参数可以是任意类型的数据', 'BCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (854, '下列哪些关于Python中面向对象编程的描述是正确的？', 'Python中所有数据类型都是对象', '类可以定义属性和方法', '对象可以调用类的方法', 'Python不支持继承和多态', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (855, '下列哪些关于Python中文件操作的描述是正确的？', '可以使用open()函数打开文件', '文件读取操作使用read()函数', '文件写入操作使用write()函数', 'with语句可用于自动关闭文件', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (856, '下列哪些关于Python中异常处理的描述是正确的？', '可以使用try和except处理异常', '可以使用raise抛出异常', '可以使用finally在任何情况下执行清理操作', '只有系统内置的异常才能被捕获和处理', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (857, '下列哪些关于Python中字符串的描述是正确的？', '字符串可以使用单引号或双引号表示', '字符串是不可变的', '字符串可以通过索引访问其中的字符', '字符串可以进行加法和乘法运算', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (858, '下列哪些关于Python中模块的描述是正确的？', '模块是一个包含函数和变量的文件', '可以使用import语句导入模块', '可以使用from...import语句导入模块中的部分内容', 'Python没有内置模块，所有模块必须手动安装', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (859, '下列哪些语句可以用于从Python字典中删除一个键值对？ ', 'dict.pop(key)', 'del dict[key]', 'dict.remove(key)', 'All of the above', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (860, '下面哪个方法可以将字符串按照指定分隔符进行拆分？  ', 'str.split()', 'str.splitlines()', 'str.join()', 'str.replace()', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (861, '以下哪个方法可以将元素添加到Python列表的结尾？  ', 'list.append()', 'list.insert()', 'list.add()', 'list.extend()', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (862, '在 Python 中，以下哪个条件语句会执行多行代码？  ', 'if', 'while', 'for', 'switch', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (863, '以下哪个模块可以用于发送电子邮件？  ', 'email', 'smtp', 'poplib', 'imaplib', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (864, '在 Python 中，以下哪个方法可以用于获取字符串的子串？  ', 'slice()', 'sub()', 'substr()', 'split()', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (865, '以下哪个运算符可以用于判断两个值是否相等？  ', '==', '=', '!=', '<=>', 'AC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (866, '下面哪个语句是正确的if语句语法？  ', 'if x > y then:', 'if x > y:', 'if (x > y):', 'if x > y {}', 'BC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (867, '在 Python 中，以下哪个数据类型是不可变的？  ', 'str', 'list', 'dict', 'tuple', 'AD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (868, '下面哪个方法可以删除列表中的某个元素？  ', 'list.delete()', 'list.remove()', 'list.pop()', 'list.clear()', 'BC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (869, '下列哪个语句可以用于从列表中删除元素？  ', 'remove()', 'pop()', 'delete()', 'discard()', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (870, '下列哪些语句可以将元素添加到列表中？', 'list.append(item)', 'list.insert(index, item)', 'list.extend(sequence)', 'list.remove(item)', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (871, '下列哪些标识符是Python中的保留关键字？', 'if', 'break', 'continue', 'switch', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (872, '在Python中，下面哪种数据类型不支持排序操作？', 'list', 'tuple', 'set', 'dictionary', 'BCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (873, '在Python中，下列哪个函数可以取整数部分？', 'int()', 'round()', 'floor()', 'ceil()', 'ACD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (874, '在Python中，以下哪些数据类型是不可变的？', 'list', 'tuple', 'set', 'str', 'BD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (875, '在Python中，以下哪个关键字可以用于退出循环？', 'break', 'continue', 'exit', 'pass', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (876, '在Python中，以下哪些方法可以在字符串中查找指定子串？', 'str.find(substring)', 'str.index(substring)', 'str.replace(old, new)', 'str.count(substring)', 'ABD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (877, '在Python中，以下哪些运算符可以用于比较两个变量的值？', '==', '!=', '<', '<=', 'ABCD', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (878, '下面哪些方法可以删除字典中指定键的值？', 'dict.pop(key)', 'del dict[key]', 'dict.clear()', 'dict.remove(key)', 'AB', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (879, '在Python中，下列哪些运算符可以用于逻辑运算？', 'and', 'or', 'not', 'xor', 'ABC', 'C语言', '略', null);
INSERT INTO objective_questions(Objective_question_id, Description, ChoiceA, ChoiceB, ChoiceC, ChoiceD, Answer, Knowledge_points, Parse, Difficulty) VALUES (880, '在 Python 中，变量名需要在使用之前进行声明', '正确', '错误', null, null, 'B', 'C语言', '略', null);
